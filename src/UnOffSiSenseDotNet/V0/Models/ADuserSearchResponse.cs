// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ADuserSearchResponse
    {
        /// <summary>
        /// Initializes a new instance of the ADuserSearchResponse class.
        /// </summary>
        public ADuserSearchResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ADuserSearchResponse class.
        /// </summary>
        public ADuserSearchResponse(string ldapDomainId, IList<object> adgroups = default(IList<object>), string userName = default(string), string roleId = default(string), string dn = default(string), string sn = default(string), string givenName = default(string), string mail = default(string), string sAMAccountName = default(string), string userPrincipalName = default(string))
        {
            Adgroups = adgroups;
            UserName = userName;
            LdapDomainId = ldapDomainId;
            RoleId = roleId;
            Dn = dn;
            Sn = sn;
            GivenName = givenName;
            Mail = mail;
            SAMAccountName = sAMAccountName;
            UserPrincipalName = userPrincipalName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "adgroups")]
        public IList<object> Adgroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ldapDomainId")]
        public string LdapDomainId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roleId")]
        public string RoleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dn")]
        public string Dn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sn")]
        public string Sn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "givenName")]
        public string GivenName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mail")]
        public string Mail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sAMAccountName")]
        public string SAMAccountName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userPrincipalName")]
        public string UserPrincipalName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (LdapDomainId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LdapDomainId");
            }
        }
    }
}
