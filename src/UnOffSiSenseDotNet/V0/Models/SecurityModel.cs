// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class SecurityModel
    {
        /// <summary>
        /// Initializes a new instance of the SecurityModel class.
        /// </summary>
        public SecurityModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SecurityModel class.
        /// </summary>
        /// <param name="authenticationMode">Possible values include: 'client',
        /// 'server'</param>
        public SecurityModel(double? cookieExp = default(double?), string passwordRegex = default(string), string passwordError = default(string), double? defaultTimeout = default(double?), double? adminsTimeout = default(double?), string authenticationMode = default(string), IList<string> embeddedDomains = default(IList<string>))
        {
            CookieExp = cookieExp;
            PasswordRegex = passwordRegex;
            PasswordError = passwordError;
            DefaultTimeout = defaultTimeout;
            AdminsTimeout = adminsTimeout;
            AuthenticationMode = authenticationMode;
            EmbeddedDomains = embeddedDomains;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "cookieExp")]
        public double? CookieExp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "passwordRegex")]
        public string PasswordRegex { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "passwordError")]
        public string PasswordError { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultTimeout")]
        public double? DefaultTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "adminsTimeout")]
        public double? AdminsTimeout { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'client', 'server'
        /// </summary>
        [JsonProperty(PropertyName = "authenticationMode")]
        public string AuthenticationMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "embeddedDomains")]
        public IList<string> EmbeddedDomains { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DefaultTimeout != null)
            {
                if (DefaultTimeout > 86400)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "DefaultTimeout", 86400);
                }
                if (DefaultTimeout < 0)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "DefaultTimeout", 0);
                }
            }
            if (AdminsTimeout != null)
            {
                if (AdminsTimeout > 86400)
                {
                    throw new ValidationException(ValidationRules.InclusiveMaximum, "AdminsTimeout", 86400);
                }
                if (AdminsTimeout < 0)
                {
                    throw new ValidationException(ValidationRules.InclusiveMinimum, "AdminsTimeout", 0);
                }
            }
        }
    }
}
