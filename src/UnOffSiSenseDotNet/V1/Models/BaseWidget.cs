// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class BaseWidget
    {
        /// <summary>
        /// Initializes a new instance of the BaseWidget class.
        /// </summary>
        public BaseWidget()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BaseWidget class.
        /// </summary>
        public BaseWidget(BaseWidgetDatasource datasource, string type, BaseWidgetMetadata metadata, string title = default(string), string desc = default(string), string subtype = default(string))
        {
            Title = title;
            Desc = desc;
            Datasource = datasource;
            Type = type;
            Subtype = subtype;
            Metadata = metadata;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "desc")]
        public string Desc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasource")]
        public BaseWidgetDatasource Datasource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subtype")]
        public string Subtype { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "metadata")]
        public BaseWidgetMetadata Metadata { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Datasource == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Datasource");
            }
            if (Type == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Type");
            }
            if (Metadata == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Metadata");
            }
            if (Datasource != null)
            {
                Datasource.Validate();
            }
        }
    }
}
