// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// TableSchema
    /// </summary>
    public partial class TableSchema
    {
        /// <summary>
        /// Initializes a new instance of the TableSchema class.
        /// </summary>
        public TableSchema()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TableSchema class.
        /// </summary>
        public TableSchema(string catalog = default(string), string schemaName = default(string), string tableName = default(string), string tableType = default(string), IList<TableColumn> columns = default(IList<TableColumn>), IList<TableRelation> relations = default(IList<TableRelation>))
        {
            Catalog = catalog;
            SchemaName = schemaName;
            TableName = tableName;
            TableType = tableType;
            Columns = columns;
            Relations = relations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "catalog")]
        public string Catalog { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaName")]
        public string SchemaName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tableName")]
        public string TableName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tableType")]
        public string TableType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<TableColumn> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "relations")]
        public IList<TableRelation> Relations { get; set; }

    }
}
