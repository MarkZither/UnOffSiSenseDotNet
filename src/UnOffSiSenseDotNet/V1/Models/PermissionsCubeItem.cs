// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class PermissionsCubeItem
    {
        /// <summary>
        /// Initializes a new instance of the PermissionsCubeItem class.
        /// </summary>
        public PermissionsCubeItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PermissionsCubeItem class.
        /// </summary>
        public PermissionsCubeItem(IList<PermissionsCubeItemUsersItem> users, IList<PermissionsCubeItemGroupsItem> groups, string dataset = default(string), string server = default(string), string elasticube = default(string))
        {
            Dataset = dataset;
            Server = server;
            Elasticube = elasticube;
            Users = users;
            Groups = groups;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataset")]
        public string Dataset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "server")]
        public string Server { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "elasticube")]
        public string Elasticube { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "users")]
        public IList<PermissionsCubeItemUsersItem> Users { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "groups")]
        public IList<PermissionsCubeItemGroupsItem> Groups { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Users == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Users");
            }
            if (Groups == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Groups");
            }
        }
    }
}
