// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DatasetTable
    {
        /// <summary>
        /// Initializes a new instance of the DatasetTable class.
        /// </summary>
        public DatasetTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetTable class.
        /// </summary>
        /// <param name="dataset">oid of dataset</param>
        public DatasetTable(string id, string name, string vTag = default(string), string lastUpdated = default(string), System.Guid? oid = default(System.Guid?), string type = default(string), bool? hidden = default(bool?), System.Guid? dataset = default(System.Guid?), IList<DatasetTableColumnsItem> columns = default(IList<DatasetTableColumnsItem>), IList<DatasetTableTupleTransformationsItem> tupleTransformations = default(IList<DatasetTableTupleTransformationsItem>))
        {
            Id = id;
            Name = name;
            VTag = vTag;
            LastUpdated = lastUpdated;
            Oid = oid;
            Type = type;
            Hidden = hidden;
            Dataset = dataset;
            Columns = columns;
            TupleTransformations = tupleTransformations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vTag")]
        public string VTag { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdated")]
        public string LastUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public System.Guid? Oid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hidden")]
        public bool? Hidden { get; set; }

        /// <summary>
        /// Gets or sets oid of dataset
        /// </summary>
        [JsonProperty(PropertyName = "dataset")]
        public System.Guid? Dataset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<DatasetTableColumnsItem> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tuple-transformations")]
        public IList<DatasetTableTupleTransformationsItem> TupleTransformations { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
        }
    }
}
