// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ServerSettings
    {
        /// <summary>
        /// Initializes a new instance of the ServerSettings class.
        /// </summary>
        public ServerSettings()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ServerSettings class.
        /// </summary>
        public ServerSettings(string defaultDataDirectory = default(string), int? elasticubeMemoryAllocation = default(int?), int? dataImportChunkSize = default(int?), int? simultaneousQueryExecutions = default(int?), int? queryTimeout = default(int?), bool? recycleQueries = default(bool?), bool? rserverEnabled = default(bool?), string rserver = default(string))
        {
            DefaultDataDirectory = defaultDataDirectory;
            ElasticubeMemoryAllocation = elasticubeMemoryAllocation;
            DataImportChunkSize = dataImportChunkSize;
            SimultaneousQueryExecutions = simultaneousQueryExecutions;
            QueryTimeout = queryTimeout;
            RecycleQueries = recycleQueries;
            RserverEnabled = rserverEnabled;
            Rserver = rserver;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DefaultDataDirectory")]
        public string DefaultDataDirectory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ElasticubeMemoryAllocation")]
        public int? ElasticubeMemoryAllocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DataImportChunkSize")]
        public int? DataImportChunkSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SimultaneousQueryExecutions")]
        public int? SimultaneousQueryExecutions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "QueryTimeout")]
        public int? QueryTimeout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecycleQueries")]
        public bool? RecycleQueries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RserverEnabled")]
        public bool? RserverEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Rserver")]
        public string Rserver { get; set; }

    }
}
