// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TimerDashboardWidgetsItem
    {
        /// <summary>
        /// Initializes a new instance of the TimerDashboardWidgetsItem class.
        /// </summary>
        public TimerDashboardWidgetsItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TimerDashboardWidgetsItem class.
        /// </summary>
        /// <param name="oid">Widget ID</param>
        /// <param name="title">Widget title</param>
        /// <param name="type">Widget type</param>
        /// <param name="logStartLoad">Time when widget started load (in
        /// milliseconds)</param>
        /// <param name="logEndLoad">Time when widget ended load (in
        /// milliseconds)</param>
        /// <param name="logStartQuery">Time when widget started query(in
        /// milliseconds)</param>
        /// <param name="logEndQuery">Time when widget ended query (in
        /// milliseconds)</param>
        /// <param name="logStartRender">Time when widget started render(in
        /// milliseconds)</param>
        /// <param name="logEndRender">Time when widget ended render (in
        /// milliseconds)</param>
        public TimerDashboardWidgetsItem(string oid = default(string), string title = default(string), string type = default(string), int? logStartLoad = default(int?), int? logEndLoad = default(int?), int? logStartQuery = default(int?), int? logEndQuery = default(int?), int? logStartRender = default(int?), int? logEndRender = default(int?))
        {
            Oid = oid;
            Title = title;
            Type = type;
            LogStartLoad = logStartLoad;
            LogEndLoad = logEndLoad;
            LogStartQuery = logStartQuery;
            LogEndQuery = logEndQuery;
            LogStartRender = logStartRender;
            LogEndRender = logEndRender;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets widget ID
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public string Oid { get; set; }

        /// <summary>
        /// Gets or sets widget title
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets widget type
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets time when widget started load (in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logStartLoad")]
        public int? LogStartLoad { get; set; }

        /// <summary>
        /// Gets or sets time when widget ended load (in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logEndLoad")]
        public int? LogEndLoad { get; set; }

        /// <summary>
        /// Gets or sets time when widget started query(in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logStartQuery")]
        public int? LogStartQuery { get; set; }

        /// <summary>
        /// Gets or sets time when widget ended query (in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logEndQuery")]
        public int? LogEndQuery { get; set; }

        /// <summary>
        /// Gets or sets time when widget started render(in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logStartRender")]
        public int? LogStartRender { get; set; }

        /// <summary>
        /// Gets or sets time when widget ended render (in milliseconds)
        /// </summary>
        [JsonProperty(PropertyName = "logEndRender")]
        public int? LogEndRender { get; set; }

    }
}
