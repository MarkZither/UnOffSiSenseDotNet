// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EventModel
    {
        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        public EventModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EventModel class.
        /// </summary>
        public EventModel(string _id = default(string), System.DateTime? time = default(System.DateTime?), string url = default(string), EventContext context = default(EventContext), EventBy by = default(EventBy), bool? seen = default(bool?), bool? hide = default(bool?), string alert = default(string))
        {
            this._id = _id;
            Time = time;
            Url = url;
            Context = context;
            By = by;
            Seen = seen;
            Hide = hide;
            Alert = alert;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_id")]
        public string _id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "time")]
        public System.DateTime? Time { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "url")]
        public string Url { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "context")]
        public EventContext Context { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "by")]
        public EventBy By { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen")]
        public bool? Seen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hide")]
        public bool? Hide { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alert")]
        public string Alert { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (_id != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(_id, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "_id", "^[0-9a-fA-F]{24}$");
                }
            }
            if (By != null)
            {
                By.Validate();
            }
            if (Alert != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Alert, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Alert", "^[0-9a-fA-F]{24}$");
                }
            }
        }
    }
}
