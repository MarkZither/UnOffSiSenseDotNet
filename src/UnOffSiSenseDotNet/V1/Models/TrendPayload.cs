// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TrendPayload
    {
        /// <summary>
        /// Initializes a new instance of the TrendPayload class.
        /// </summary>
        public TrendPayload()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TrendPayload class.
        /// </summary>
        /// <param name="type">Trend type. Possible values include: 'linear',
        /// 'logarithmic', 'local', 'smooth'</param>
        /// <param name="ignoreAnomalies">If true, values considered as
        /// anomalies will be replaced by the average of the two values that
        /// come before and after it.</param>
        public TrendPayload(string type = default(string), bool? ignoreAnomalies = default(bool?), TrendPayloadData data = default(TrendPayloadData))
        {
            Type = type;
            IgnoreAnomalies = ignoreAnomalies;
            Data = data;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets trend type. Possible values include: 'linear',
        /// 'logarithmic', 'local', 'smooth'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Gets or sets if true, values considered as anomalies will be
        /// replaced by the average of the two values that come before and
        /// after it.
        /// </summary>
        [JsonProperty(PropertyName = "ignoreAnomalies")]
        public bool? IgnoreAnomalies { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public TrendPayloadData Data { get; set; }

    }
}
