// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class SqlQueryWithType
    {
        /// <summary>
        /// Initializes a new instance of the SqlQueryWithType class.
        /// </summary>
        public SqlQueryWithType()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SqlQueryWithType class.
        /// </summary>
        /// <param name="fieldType">Possible values include: 'BigInt',
        /// 'Binary', 'Bit', 'Char', 'DateTime', 'Decimal', 'Float', 'Image',
        /// 'Int', 'Money', 'NChar', 'NText', 'NVarChar', 'Real',
        /// 'UniqueIdentifier', 'SmallDateTime', 'SmallInt', 'SmallMoney',
        /// 'Text', 'Timestamp', 'TinyInt', 'VarBinary', 'VarChar', 'Variant',
        /// 'Xml', 'Udt', 'Structured', 'Date', 'Time', 'DateTime2',
        /// 'DateTimeOffset'</param>
        public SqlQueryWithType(string queryString = default(string), string fieldType = default(string))
        {
            QueryString = queryString;
            FieldType = fieldType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryString")]
        public string QueryString { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'BigInt', 'Binary', 'Bit',
        /// 'Char', 'DateTime', 'Decimal', 'Float', 'Image', 'Int', 'Money',
        /// 'NChar', 'NText', 'NVarChar', 'Real', 'UniqueIdentifier',
        /// 'SmallDateTime', 'SmallInt', 'SmallMoney', 'Text', 'Timestamp',
        /// 'TinyInt', 'VarBinary', 'VarChar', 'Variant', 'Xml', 'Udt',
        /// 'Structured', 'Date', 'Time', 'DateTime2', 'DateTimeOffset'
        /// </summary>
        [JsonProperty(PropertyName = "fieldType")]
        public string FieldType { get; set; }

    }
}
