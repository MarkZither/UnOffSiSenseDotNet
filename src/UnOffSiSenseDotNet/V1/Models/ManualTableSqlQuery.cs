// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ManualTableSqlQuery
    {
        /// <summary>
        /// Initializes a new instance of the ManualTableSqlQuery class.
        /// </summary>
        public ManualTableSqlQuery()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ManualTableSqlQuery class.
        /// </summary>
        /// <param name="providerName">Possible values include: 'sql',
        /// 'MySql'</param>
        public ManualTableSqlQuery(string queryString = default(string), string tableName = default(string), string connectionString = default(string), string providerName = default(string), string schemaName = default(string), string originalTableName = default(string))
        {
            QueryString = queryString;
            TableName = tableName;
            ConnectionString = connectionString;
            ProviderName = providerName;
            SchemaName = schemaName;
            OriginalTableName = originalTableName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryString")]
        public string QueryString { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tableName")]
        public string TableName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connectionString")]
        public string ConnectionString { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'sql', 'MySql'
        /// </summary>
        [JsonProperty(PropertyName = "providerName")]
        public string ProviderName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaName")]
        public string SchemaName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "originalTableName")]
        public string OriginalTableName { get; set; }

    }
}
