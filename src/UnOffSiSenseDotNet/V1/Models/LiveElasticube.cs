// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LiveElasticube
    {
        /// <summary>
        /// Initializes a new instance of the LiveElasticube class.
        /// </summary>
        public LiveElasticube()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LiveElasticube class.
        /// </summary>
        public LiveElasticube(string title, string _id = default(string), IList<LiveElasticubeSharesItem> shares = default(IList<LiveElasticubeSharesItem>), IList<string> datasets = default(IList<string>), System.Guid? oid = default(System.Guid?), string lastUpdated = default(string), string type = default(string), string creator = default(string))
        {
            this._id = _id;
            Title = title;
            Shares = shares;
            Datasets = datasets;
            Oid = oid;
            LastUpdated = lastUpdated;
            Type = type;
            Creator = creator;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_id")]
        public string _id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shares")]
        public IList<LiveElasticubeSharesItem> Shares { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datasets")]
        public IList<string> Datasets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public System.Guid? Oid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastUpdated")]
        public string LastUpdated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "creator")]
        public string Creator { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
            if (Shares != null)
            {
                foreach (var element in Shares)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
