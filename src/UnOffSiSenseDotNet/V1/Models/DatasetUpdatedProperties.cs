// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class DatasetUpdatedProperties
    {
        /// <summary>
        /// Initializes a new instance of the DatasetUpdatedProperties class.
        /// </summary>
        public DatasetUpdatedProperties()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatasetUpdatedProperties class.
        /// </summary>
        /// <param name="type">Possible values include: 'live',
        /// 'extract'</param>
        public DatasetUpdatedProperties(string _id = default(string), string owner = default(string), string name = default(string), string fullname = default(string), string type = default(string), string connection = default(string), IList<DatasetUpdatedPropertiesModelingTransformationsItem> modelingTransformations = default(IList<DatasetUpdatedPropertiesModelingTransformationsItem>), DatasetUpdatedPropertiesSchema schema = default(DatasetUpdatedPropertiesSchema), DatasetUpdatedPropertiesSchedule schedule = default(DatasetUpdatedPropertiesSchedule))
        {
            this._id = _id;
            Owner = owner;
            Name = name;
            Fullname = fullname;
            Type = type;
            Connection = connection;
            ModelingTransformations = modelingTransformations;
            Schema = schema;
            Schedule = schedule;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_id")]
        public string _id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owner")]
        public string Owner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fullname")]
        public string Fullname { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'live', 'extract'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connection")]
        public string Connection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modeling-transformations")]
        public IList<DatasetUpdatedPropertiesModelingTransformationsItem> ModelingTransformations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schema")]
        public DatasetUpdatedPropertiesSchema Schema { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schedule")]
        public DatasetUpdatedPropertiesSchedule Schedule { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (_id != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(_id, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "_id", "^[0-9a-fA-F]{24}$");
                }
            }
            if (Owner != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Owner, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Owner", "^[0-9a-fA-F]{24}$");
                }
            }
            if (Connection != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(Connection, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "Connection", "^[0-9a-fA-F]{24}$");
                }
            }
        }
    }
}
