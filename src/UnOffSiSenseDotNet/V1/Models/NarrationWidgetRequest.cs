// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NarrationWidgetRequest
    {
        /// <summary>
        /// Initializes a new instance of the NarrationWidgetRequest class.
        /// </summary>
        public NarrationWidgetRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NarrationWidgetRequest class.
        /// </summary>
        /// <param name="chartType">сhart type like "chart/pie" and
        /// etc.</param>
        /// <param name="narration">narration configuration</param>
        /// <param name="jaqlRequest">JAQL query object</param>
        /// <param name="widgetId">widget id</param>
        /// <param name="dashboardId">dashboard id</param>
        public NarrationWidgetRequest(string chartType, NarrationWidgetRequestNarration narration, NarrationWidgetRequestJaqlRequest jaqlRequest, string widgetId = default(string), string dashboardId = default(string))
        {
            ChartType = chartType;
            Narration = narration;
            JaqlRequest = jaqlRequest;
            WidgetId = widgetId;
            DashboardId = dashboardId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets сhart type like "chart/pie" and etc.
        /// </summary>
        [JsonProperty(PropertyName = "chartType")]
        public string ChartType { get; set; }

        /// <summary>
        /// Gets or sets narration configuration
        /// </summary>
        [JsonProperty(PropertyName = "narration")]
        public NarrationWidgetRequestNarration Narration { get; set; }

        /// <summary>
        /// Gets or sets JAQL query object
        /// </summary>
        [JsonProperty(PropertyName = "jaqlRequest")]
        public NarrationWidgetRequestJaqlRequest JaqlRequest { get; set; }

        /// <summary>
        /// Gets or sets widget id
        /// </summary>
        [JsonProperty(PropertyName = "widgetId")]
        public string WidgetId { get; set; }

        /// <summary>
        /// Gets or sets dashboard id
        /// </summary>
        [JsonProperty(PropertyName = "dashboardId")]
        public string DashboardId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ChartType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ChartType");
            }
            if (Narration == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Narration");
            }
            if (JaqlRequest == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "JaqlRequest");
            }
            if (JaqlRequest != null)
            {
                JaqlRequest.Validate();
            }
        }
    }
}
