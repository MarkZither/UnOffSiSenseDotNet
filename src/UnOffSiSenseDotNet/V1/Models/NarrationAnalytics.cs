// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class NarrationAnalytics
    {
        /// <summary>
        /// Initializes a new instance of the NarrationAnalytics class.
        /// </summary>
        public NarrationAnalytics()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NarrationAnalytics class.
        /// </summary>
        /// <param name="enabled">disable/enable analytics for
        /// narration</param>
        /// <param name="clustering">attempts to find clusters of
        /// closely-related data points</param>
        /// <param name="distribution">determines if the data collection
        /// follows a normal distribution</param>
        /// <param name="correlation">performs regressions of the measure
        /// values across the discrete dimension and comments on the
        /// analysis</param>
        /// <param name="trendline">trendlines consist of fitting the data for
        /// each measure to a line and determining whether or not that model
        /// fits the data</param>
        /// <param name="segments">segments are noteworthy/interesting portions
        /// of a series with movements of a certain percent of change</param>
        /// <param name="volatility">volatility is a measure of how erratic a
        /// series is, used to rank series to find the most or least
        /// volatile</param>
        public NarrationAnalytics(bool? enabled = default(bool?), object clustering = default(object), object distribution = default(object), object correlation = default(object), object trendline = default(object), object segments = default(object), object volatility = default(object))
        {
            Enabled = enabled;
            Clustering = clustering;
            Distribution = distribution;
            Correlation = correlation;
            Trendline = trendline;
            Segments = segments;
            Volatility = volatility;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets disable/enable analytics for narration
        /// </summary>
        [JsonProperty(PropertyName = "enabled")]
        public bool? Enabled { get; set; }

        /// <summary>
        /// Gets or sets attempts to find clusters of closely-related data
        /// points
        /// </summary>
        [JsonProperty(PropertyName = "clustering")]
        public object Clustering { get; set; }

        /// <summary>
        /// Gets or sets determines if the data collection follows a normal
        /// distribution
        /// </summary>
        [JsonProperty(PropertyName = "distribution")]
        public object Distribution { get; set; }

        /// <summary>
        /// Gets or sets performs regressions of the measure values across the
        /// discrete dimension and comments on the analysis
        /// </summary>
        [JsonProperty(PropertyName = "correlation")]
        public object Correlation { get; set; }

        /// <summary>
        /// Gets or sets trendlines consist of fitting the data for each
        /// measure to a line and determining whether or not that model fits
        /// the data
        /// </summary>
        [JsonProperty(PropertyName = "trendline")]
        public object Trendline { get; set; }

        /// <summary>
        /// Gets or sets segments are noteworthy/interesting portions of a
        /// series with movements of a certain percent of change
        /// </summary>
        [JsonProperty(PropertyName = "segments")]
        public object Segments { get; set; }

        /// <summary>
        /// Gets or sets volatility is a measure of how erratic a series is,
        /// used to rank series to find the most or least volatile
        /// </summary>
        [JsonProperty(PropertyName = "volatility")]
        public object Volatility { get; set; }

    }
}
