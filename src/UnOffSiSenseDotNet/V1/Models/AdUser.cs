// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V1.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class AdUser
    {
        /// <summary>
        /// Initializes a new instance of the AdUser class.
        /// </summary>
        public AdUser()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the AdUser class.
        /// </summary>
        public AdUser(string userName, string ldapDomainId, string roleId = default(string), IList<string> groups = default(IList<string>), string objectSid = default(string), AdUserPreferences preferences = default(AdUserPreferences), object uiSettings = default(object))
        {
            UserName = userName;
            LdapDomainId = ldapDomainId;
            RoleId = roleId;
            Groups = groups;
            ObjectSid = objectSid;
            Preferences = preferences;
            UiSettings = uiSettings;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userName")]
        public string UserName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ldapDomainId")]
        public string LdapDomainId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "roleId")]
        public string RoleId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "groups")]
        public IList<string> Groups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "objectSid")]
        public string ObjectSid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferences")]
        public AdUserPreferences Preferences { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uiSettings")]
        public object UiSettings { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UserName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UserName");
            }
            if (LdapDomainId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LdapDomainId");
            }
            if (RoleId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(RoleId, "^[0-9a-fA-F]{24}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "RoleId", "^[0-9a-fA-F]{24}$");
                }
            }
            if (ObjectSid != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(ObjectSid, "^\\[\\d{1,3}(?:,\\d{1,3}){27}\\]$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "ObjectSid", "^\\[\\d{1,3}(?:,\\d{1,3}){27}\\]$");
                }
            }
        }
    }
}
