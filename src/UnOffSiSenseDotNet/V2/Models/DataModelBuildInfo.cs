// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about the Datamodel last build, applies only to `extract`
    /// type Datamodels
    /// </summary>
    public partial class DatamodelBuildInfo
    {
        /// <summary>
        /// Initializes a new instance of the DatamodelBuildInfo class.
        /// </summary>
        public DatamodelBuildInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatamodelBuildInfo class.
        /// </summary>
        /// <param name="lastFullBuildTime">Datetime of most recent full
        /// build</param>
        /// <param name="lastDeltaBuildTime">Datetime of most recent
        /// accumulative/partial build</param>
        /// <param name="lastScheduledBuildTime">Datetime of most recent
        /// scheduled build</param>
        /// <param name="lastFullBuildDuration">Duration of most recent full
        /// build, in seconds</param>
        /// <param name="lastDeltaBuildDuration">Duration of most recent
        /// accumulative/partial build, in seconds</param>
        /// <param name="lastScheduledBuildDuration">Duration of most recent
        /// scheduled build, in seconds</param>
        /// <param name="nextScheduledBuildTime">Datetime of next scheduled
        /// build</param>
        /// <param name="buildId">Unique ID of the most recent Build
        /// Process</param>
        /// <param name="lastBuildSucceeded">True if the most recent build
        /// completed successfully</param>
        public DatamodelBuildInfo(System.DateTime? lastFullBuildTime = default(System.DateTime?), System.DateTime? lastDeltaBuildTime = default(System.DateTime?), System.DateTime? lastScheduledBuildTime = default(System.DateTime?), string lastFullBuildDuration = default(string), string lastDeltaBuildDuration = default(string), string lastScheduledBuildDuration = default(string), System.DateTime? nextScheduledBuildTime = default(System.DateTime?), System.Guid? buildId = default(System.Guid?), bool? lastBuildSucceeded = default(bool?))
        {
            LastFullBuildTime = lastFullBuildTime;
            LastDeltaBuildTime = lastDeltaBuildTime;
            LastScheduledBuildTime = lastScheduledBuildTime;
            LastFullBuildDuration = lastFullBuildDuration;
            LastDeltaBuildDuration = lastDeltaBuildDuration;
            LastScheduledBuildDuration = lastScheduledBuildDuration;
            NextScheduledBuildTime = nextScheduledBuildTime;
            BuildId = buildId;
            LastBuildSucceeded = lastBuildSucceeded;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets datetime of most recent full build
        /// </summary>
        [JsonProperty(PropertyName = "lastFullBuildTime")]
        public System.DateTime? LastFullBuildTime { get; set; }

        /// <summary>
        /// Gets or sets datetime of most recent accumulative/partial build
        /// </summary>
        [JsonProperty(PropertyName = "lastDeltaBuildTime")]
        public System.DateTime? LastDeltaBuildTime { get; set; }

        /// <summary>
        /// Gets or sets datetime of most recent scheduled build
        /// </summary>
        [JsonProperty(PropertyName = "lastScheduledBuildTime")]
        public System.DateTime? LastScheduledBuildTime { get; set; }

        /// <summary>
        /// Gets or sets duration of most recent full build, in seconds
        /// </summary>
        [JsonProperty(PropertyName = "lastFullBuildDuration")]
        public string LastFullBuildDuration { get; set; }

        /// <summary>
        /// Gets or sets duration of most recent accumulative/partial build, in
        /// seconds
        /// </summary>
        [JsonProperty(PropertyName = "lastDeltaBuildDuration")]
        public string LastDeltaBuildDuration { get; set; }

        /// <summary>
        /// Gets or sets duration of most recent scheduled build, in seconds
        /// </summary>
        [JsonProperty(PropertyName = "lastScheduledBuildDuration")]
        public string LastScheduledBuildDuration { get; set; }

        /// <summary>
        /// Gets or sets datetime of next scheduled build
        /// </summary>
        [JsonProperty(PropertyName = "nextScheduledBuildTime")]
        public System.DateTime? NextScheduledBuildTime { get; set; }

        /// <summary>
        /// Gets or sets unique ID of the most recent Build Process
        /// </summary>
        [JsonProperty(PropertyName = "buildId")]
        public System.Guid? BuildId { get; set; }

        /// <summary>
        /// Gets or sets true if the most recent build completed successfully
        /// </summary>
        [JsonProperty(PropertyName = "lastBuildSucceeded")]
        public bool? LastBuildSucceeded { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BuildId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(BuildId.ToString(), "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "BuildId", "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$");
                }
            }
        }
    }
}
