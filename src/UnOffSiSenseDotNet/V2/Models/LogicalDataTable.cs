// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// LogicalDataTable
    /// </summary>
    public partial class LogicalDataTable
    {
        /// <summary>
        /// Initializes a new instance of the LogicalDataTable class.
        /// </summary>
        public LogicalDataTable()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LogicalDataTable class.
        /// </summary>
        public LogicalDataTable(IList<LogicalDataColumn> columns = default(IList<LogicalDataColumn>), string dataSourceTableName = default(string), bool? isHidden = default(bool?), string logicalTableName = default(string), string oid = default(string), string schemaName = default(string))
        {
            Columns = columns;
            DataSourceTableName = dataSourceTableName;
            IsHidden = isHidden;
            LogicalTableName = logicalTableName;
            Oid = oid;
            SchemaName = schemaName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "columns")]
        public IList<LogicalDataColumn> Columns { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dataSourceTableName")]
        public string DataSourceTableName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isHidden")]
        public bool? IsHidden { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logicalTableName")]
        public string LogicalTableName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public string Oid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "schemaName")]
        public string SchemaName { get; set; }

    }
}
