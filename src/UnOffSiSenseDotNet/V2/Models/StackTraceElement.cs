// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// StackTraceElement
    /// </summary>
    public partial class StackTraceElement
    {
        /// <summary>
        /// Initializes a new instance of the StackTraceElement class.
        /// </summary>
        public StackTraceElement()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StackTraceElement class.
        /// </summary>
        public StackTraceElement(string classLoaderName = default(string), string className = default(string), string fileName = default(string), int? lineNumber = default(int?), string methodName = default(string), string moduleName = default(string), string moduleVersion = default(string), bool? nativeMethod = default(bool?))
        {
            ClassLoaderName = classLoaderName;
            ClassName = className;
            FileName = fileName;
            LineNumber = lineNumber;
            MethodName = methodName;
            ModuleName = moduleName;
            ModuleVersion = moduleVersion;
            NativeMethod = nativeMethod;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "classLoaderName")]
        public string ClassLoaderName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "className")]
        public string ClassName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileName")]
        public string FileName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lineNumber")]
        public int? LineNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "methodName")]
        public string MethodName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moduleName")]
        public string ModuleName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moduleVersion")]
        public string ModuleVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nativeMethod")]
        public bool? NativeMethod { get; set; }

    }
}
