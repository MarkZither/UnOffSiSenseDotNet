// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// SchedulerTaskEvent
    /// </summary>
    public partial class SchedulerTaskEvent
    {
        /// <summary>
        /// Initializes a new instance of the SchedulerTaskEvent class.
        /// </summary>
        public SchedulerTaskEvent()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the SchedulerTaskEvent class.
        /// </summary>
        public SchedulerTaskEvent(string eventId, string taskId, IList<string> additionalInfo = default(IList<string>), string completedMessage = default(string), string endTime = default(string), string executionTime = default(string))
        {
            AdditionalInfo = additionalInfo;
            CompletedMessage = completedMessage;
            EndTime = endTime;
            EventId = eventId;
            ExecutionTime = executionTime;
            TaskId = taskId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "additionalInfo")]
        public IList<string> AdditionalInfo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "completedMessage")]
        public string CompletedMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public string EndTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "eventId")]
        public string EventId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionTime")]
        public string ExecutionTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taskId")]
        public string TaskId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EventId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EventId");
            }
            if (TaskId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TaskId");
            }
        }
    }
}
