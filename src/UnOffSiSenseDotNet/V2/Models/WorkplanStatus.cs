// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// WorkplanStatus
    /// </summary>
    public partial class WorkplanStatus
    {
        /// <summary>
        /// Initializes a new instance of the WorkplanStatus class.
        /// </summary>
        public WorkplanStatus()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkplanStatus class.
        /// </summary>
        /// <param name="workplanState">Workplan status</param>
        /// <param name="startTime">Workplan start time (set only if workplan
        /// already started)</param>
        /// <param name="endTime">Workplan end time (set only if workplan
        /// already ended)</param>
        /// <param name="errorMessage">Error message (set only in case of
        /// failure)</param>
        /// <param name="workplanCustomAttributes">Custom attributes per
        /// workplan type. Notice the attributes can be different according to
        /// the specific workplan</param>
        public WorkplanStatus(WorkplanState workplanState, string startTime, string endTime, string errorMessage, IDictionary<string, string> workplanCustomAttributes = default(IDictionary<string, string>))
        {
            WorkplanState = workplanState;
            StartTime = startTime;
            EndTime = endTime;
            ErrorMessage = errorMessage;
            WorkplanCustomAttributes = workplanCustomAttributes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets workplan status
        /// </summary>
        [JsonProperty(PropertyName = "workplanState")]
        public WorkplanState WorkplanState { get; set; }

        /// <summary>
        /// Gets or sets workplan start time (set only if workplan already
        /// started)
        /// </summary>
        [JsonProperty(PropertyName = "startTime")]
        public string StartTime { get; set; }

        /// <summary>
        /// Gets or sets workplan end time (set only if workplan already ended)
        /// </summary>
        [JsonProperty(PropertyName = "endTime")]
        public string EndTime { get; set; }

        /// <summary>
        /// Gets or sets error message (set only in case of failure)
        /// </summary>
        [JsonProperty(PropertyName = "errorMessage")]
        public string ErrorMessage { get; set; }

        /// <summary>
        /// Gets or sets custom attributes per workplan type. Notice the
        /// attributes can be different according to the specific workplan
        /// </summary>
        [JsonProperty(PropertyName = "workplanCustomAttributes")]
        public IDictionary<string, string> WorkplanCustomAttributes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (WorkplanState == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "WorkplanState");
            }
            if (StartTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "StartTime");
            }
            if (EndTime == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EndTime");
            }
            if (ErrorMessage == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ErrorMessage");
            }
        }
    }
}
