// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// BuildScheduleDTO
    /// </summary>
    /// <remarks>
    /// All Times in UTC
    /// </remarks>
    public partial class BuildScheduleDTO
    {
        /// <summary>
        /// Initializes a new instance of the BuildScheduleDTO class.
        /// </summary>
        public BuildScheduleDTO()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the BuildScheduleDTO class.
        /// </summary>
        /// <param name="buildType">Possible values include: 'ACCUMULATE',
        /// 'FULL', 'SCHEMA_CHANGES'</param>
        /// <param name="scheduleType">Possible values include: 'Interval',
        /// 'DaysOfWeek'</param>
        public BuildScheduleDTO(string buildType, string scheduleType, IList<string> daysOfWeek = default(IList<string>), int? hour = default(int?), long? intervalSeconds = default(long?), int? minute = default(int?))
        {
            BuildType = buildType;
            DaysOfWeek = daysOfWeek;
            Hour = hour;
            IntervalSeconds = intervalSeconds;
            Minute = minute;
            ScheduleType = scheduleType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'ACCUMULATE', 'FULL',
        /// 'SCHEMA_CHANGES'
        /// </summary>
        [JsonProperty(PropertyName = "buildType")]
        public string BuildType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "daysOfWeek")]
        public IList<string> DaysOfWeek { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hour")]
        public int? Hour { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "intervalSeconds")]
        public long? IntervalSeconds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minute")]
        public int? Minute { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Interval', 'DaysOfWeek'
        /// </summary>
        [JsonProperty(PropertyName = "scheduleType")]
        public string ScheduleType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (BuildType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BuildType");
            }
            if (ScheduleType == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ScheduleType");
            }
        }
    }
}
