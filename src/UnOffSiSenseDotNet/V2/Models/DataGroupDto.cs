// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// DataGroupDto
    /// </summary>
    public partial class DataGroupDto
    {
        /// <summary>
        /// Initializes a new instance of the DataGroupDto class.
        /// </summary>
        public DataGroupDto()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DataGroupDto class.
        /// </summary>
        /// <param name="buildConnectorRunningMode">Possible values include:
        /// 'SYSTEM_CONNECTORS', 'INTERNAL_CONNECTORS'</param>
        /// <param name="indexSize">Possible values include: 'SHORT',
        /// 'LONG'</param>
        /// <param name="routingPolicy">Possible values include:
        /// 'ROUND_ROBIN'</param>
        public DataGroupDto(string buildConnectorRunningMode = default(string), ResourceAllocation buildNodeResourceAllocation = default(ResourceAllocation), IList<string> buildNodes = default(IList<string>), int? connectorsJvmMemoryLimit = default(int?), IList<DataSourceForDataGroup> datamodels = default(IList<DataSourceForDataGroup>), bool? defaultProperty = default(bool?), string indexSize = default(string), string name = default(string), string oid = default(string), ResourceAllocation queryNodeResourceAllocation = default(ResourceAllocation), IList<string> queryNodes = default(IList<string>), DataGroupQualityOfService queryQualityOfService = default(DataGroupQualityOfService), bool? recyclerEnabled = default(bool?), string routingPolicy = default(string), bool? useLocalStorage = default(bool?), bool? useS3Storage = default(bool?), string userLabel = default(string))
        {
            BuildConnectorRunningMode = buildConnectorRunningMode;
            BuildNodeResourceAllocation = buildNodeResourceAllocation;
            BuildNodes = buildNodes;
            ConnectorsJvmMemoryLimit = connectorsJvmMemoryLimit;
            Datamodels = datamodels;
            DefaultProperty = defaultProperty;
            IndexSize = indexSize;
            Name = name;
            Oid = oid;
            QueryNodeResourceAllocation = queryNodeResourceAllocation;
            QueryNodes = queryNodes;
            QueryQualityOfService = queryQualityOfService;
            RecyclerEnabled = recyclerEnabled;
            RoutingPolicy = routingPolicy;
            UseLocalStorage = useLocalStorage;
            UseS3Storage = useS3Storage;
            UserLabel = userLabel;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include: 'SYSTEM_CONNECTORS',
        /// 'INTERNAL_CONNECTORS'
        /// </summary>
        [JsonProperty(PropertyName = "buildConnectorRunningMode")]
        public string BuildConnectorRunningMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "buildNodeResourceAllocation")]
        public ResourceAllocation BuildNodeResourceAllocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "buildNodes")]
        public IList<string> BuildNodes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "connectorsJvmMemoryLimit")]
        public int? ConnectorsJvmMemoryLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "datamodels")]
        public IList<DataSourceForDataGroup> Datamodels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "default")]
        public bool? DefaultProperty { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'SHORT', 'LONG'
        /// </summary>
        [JsonProperty(PropertyName = "indexSize")]
        public string IndexSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public string Oid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryNodeResourceAllocation")]
        public ResourceAllocation QueryNodeResourceAllocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryNodes")]
        public IList<string> QueryNodes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryQualityOfService")]
        public DataGroupQualityOfService QueryQualityOfService { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "recyclerEnabled")]
        public bool? RecyclerEnabled { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'ROUND_ROBIN'
        /// </summary>
        [JsonProperty(PropertyName = "routingPolicy")]
        public string RoutingPolicy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "useLocalStorage")]
        public bool? UseLocalStorage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "useS3Storage")]
        public bool? UseS3Storage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "userLabel")]
        public string UserLabel { get; set; }

    }
}
