// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Error
    /// </summary>
    public partial class ErrorModel
    {
        /// <summary>
        /// Initializes a new instance of the ErrorModel class.
        /// </summary>
        public ErrorModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ErrorModel class.
        /// </summary>
        /// <param name="status">The HTTP code of the response.</param>
        /// <param name="title">A short name for the error.</param>
        /// <param name="detail">A detailed error message.</param>
        /// <param name="instance">When applicable, a relative URI of
        /// affected/offensive resource.</param>
        /// <param name="logref">When applicable, a reference to the log entry
        /// representing the error's occurrence.</param>
        /// <param name="sub">When applicable, a specific error
        /// sub-code.</param>
        /// <param name="type">When applicable, this URI will can be used to
        /// identify the specific error and find additional information about
        /// it.</param>
        public ErrorModel(int status, string title, string detail = default(string), string instance = default(string), string logref = default(string), int? sub = default(int?), string type = default(string))
        {
            Detail = detail;
            Instance = instance;
            Logref = logref;
            Status = status;
            Sub = sub;
            Title = title;
            Type = type;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets a detailed error message.
        /// </summary>
        [JsonProperty(PropertyName = "detail")]
        public string Detail { get; set; }

        /// <summary>
        /// Gets or sets when applicable, a relative URI of affected/offensive
        /// resource.
        /// </summary>
        [JsonProperty(PropertyName = "instance")]
        public string Instance { get; set; }

        /// <summary>
        /// Gets or sets when applicable, a reference to the log entry
        /// representing the error's occurrence.
        /// </summary>
        [JsonProperty(PropertyName = "logref")]
        public string Logref { get; set; }

        /// <summary>
        /// Gets or sets the HTTP code of the response.
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public int Status { get; set; }

        /// <summary>
        /// Gets or sets when applicable, a specific error sub-code.
        /// </summary>
        [JsonProperty(PropertyName = "sub")]
        public int? Sub { get; set; }

        /// <summary>
        /// Gets or sets a short name for the error.
        /// </summary>
        [JsonProperty(PropertyName = "title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or sets when applicable, this URI will can be used to identify
        /// the specific error and find additional information about it.
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Title == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Title");
            }
        }
    }
}
