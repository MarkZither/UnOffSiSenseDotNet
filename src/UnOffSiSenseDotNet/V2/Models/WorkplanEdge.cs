// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// WorkplanEdge
    /// </summary>
    public partial class WorkplanEdge
    {
        /// <summary>
        /// Initializes a new instance of the WorkplanEdge class.
        /// </summary>
        public WorkplanEdge()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the WorkplanEdge class.
        /// </summary>
        /// <param name="edgeId">Edge ID</param>
        /// <param name="sourceNodeId">Node ID of the source task node (the
        /// required node that target node depends on)</param>
        /// <param name="targetNodeId">Node ID of the target task node (later
        /// node that should run after source node fulfilled)</param>
        public WorkplanEdge(string edgeId, string sourceNodeId, string targetNodeId)
        {
            EdgeId = edgeId;
            SourceNodeId = sourceNodeId;
            TargetNodeId = targetNodeId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets edge ID
        /// </summary>
        [JsonProperty(PropertyName = "edgeId")]
        public string EdgeId { get; set; }

        /// <summary>
        /// Gets or sets node ID of the source task node (the required node
        /// that target node depends on)
        /// </summary>
        [JsonProperty(PropertyName = "sourceNodeId")]
        public string SourceNodeId { get; set; }

        /// <summary>
        /// Gets or sets node ID of the target task node (later node that
        /// should run after source node fulfilled)
        /// </summary>
        [JsonProperty(PropertyName = "targetNodeId")]
        public string TargetNodeId { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EdgeId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EdgeId");
            }
            if (SourceNodeId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SourceNodeId");
            }
            if (TargetNodeId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TargetNodeId");
            }
        }
    }
}
