// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// NodeWithSpec
    /// </summary>
    public partial class NodeWithSpec
    {
        /// <summary>
        /// Initializes a new instance of the NodeWithSpec class.
        /// </summary>
        public NodeWithSpec()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the NodeWithSpec class.
        /// </summary>
        public NodeWithSpec(bool? active = default(bool?), int? amountOfCpu = default(int?), int? amountOfRamInMb = default(int?), string architecture = default(string), string containerRuntimeVersion = default(string), string hostName = default(string), string kernelVersion = default(string), string kubeProxyVersion = default(string), string kubeletVersion = default(string), IList<string> nodeRoles = default(IList<string>), string oid = default(string), string operatingSystem = default(string), string osImage = default(string))
        {
            Active = active;
            AmountOfCpu = amountOfCpu;
            AmountOfRamInMb = amountOfRamInMb;
            Architecture = architecture;
            ContainerRuntimeVersion = containerRuntimeVersion;
            HostName = hostName;
            KernelVersion = kernelVersion;
            KubeProxyVersion = kubeProxyVersion;
            KubeletVersion = kubeletVersion;
            NodeRoles = nodeRoles;
            Oid = oid;
            OperatingSystem = operatingSystem;
            OsImage = osImage;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "active")]
        public bool? Active { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountOfCpu")]
        public int? AmountOfCpu { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amountOfRamInMb")]
        public int? AmountOfRamInMb { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "architecture")]
        public string Architecture { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "containerRuntimeVersion")]
        public string ContainerRuntimeVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hostName")]
        public string HostName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kernelVersion")]
        public string KernelVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kubeProxyVersion")]
        public string KubeProxyVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "kubeletVersion")]
        public string KubeletVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nodeRoles")]
        public IList<string> NodeRoles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "oid")]
        public string Oid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "operatingSystem")]
        public string OperatingSystem { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "osImage")]
        public string OsImage { get; set; }

    }
}
