// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.V2_0.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class DatamodelInstance
    {
        /// <summary>
        /// Initializes a new instance of the DatamodelInstance class.
        /// </summary>
        public DatamodelInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the DatamodelInstance class.
        /// </summary>
        /// <param name="datamodelId">Unique ID assigned to the
        /// Datamodel</param>
        /// <param name="datamodelTitle">Datamodel title</param>
        /// <param name="buildId">Unique ID of the most recent Build Process
        /// that created/updated this instance</param>
        /// <param name="buildTime">Datetime of the most recent Build Process
        /// that created/updated this instance</param>
        /// <param name="creationTime">Datetime of Instance creation</param>
        /// <param name="memoryMb">MBs of RAM currently consumed by the
        /// Instance</param>
        /// <param name="mode">Which mode the Instance is operating in
        /// currently. Possible values include: 'build', 'query'</param>
        /// <param name="nodeId">Unique ID of the Node hosting this
        /// Instance</param>
        /// <param name="podId">Unique ID of the Kubernetes Pod running this
        /// Instance</param>
        /// <param name="status">Current status of this Instance. Possible
        /// values include: 'pending', 'running', 'succeeded', 'failed',
        /// 'unknown'</param>
        public DatamodelInstance(System.Guid? datamodelId = default(System.Guid?), string datamodelTitle = default(string), System.Guid? buildId = default(System.Guid?), System.DateTime? buildTime = default(System.DateTime?), System.DateTime? creationTime = default(System.DateTime?), int? memoryMb = default(int?), string mode = default(string), System.Guid? nodeId = default(System.Guid?), string podId = default(string), string status = default(string))
        {
            DatamodelId = datamodelId;
            DatamodelTitle = datamodelTitle;
            BuildId = buildId;
            BuildTime = buildTime;
            CreationTime = creationTime;
            MemoryMb = memoryMb;
            Mode = mode;
            NodeId = nodeId;
            PodId = podId;
            Status = status;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets unique ID assigned to the Datamodel
        /// </summary>
        [JsonProperty(PropertyName = "datamodelId")]
        public System.Guid? DatamodelId { get; set; }

        /// <summary>
        /// Gets or sets datamodel title
        /// </summary>
        [JsonProperty(PropertyName = "datamodelTitle")]
        public string DatamodelTitle { get; set; }

        /// <summary>
        /// Gets or sets unique ID of the most recent Build Process that
        /// created/updated this instance
        /// </summary>
        [JsonProperty(PropertyName = "buildId")]
        public System.Guid? BuildId { get; set; }

        /// <summary>
        /// Gets or sets datetime of the most recent Build Process that
        /// created/updated this instance
        /// </summary>
        [JsonProperty(PropertyName = "buildTime")]
        public System.DateTime? BuildTime { get; set; }

        /// <summary>
        /// Gets or sets datetime of Instance creation
        /// </summary>
        [JsonProperty(PropertyName = "creationTime")]
        public System.DateTime? CreationTime { get; set; }

        /// <summary>
        /// Gets or sets mBs of RAM currently consumed by the Instance
        /// </summary>
        [JsonProperty(PropertyName = "memoryMb")]
        public int? MemoryMb { get; set; }

        /// <summary>
        /// Gets or sets which mode the Instance is operating in currently.
        /// Possible values include: 'build', 'query'
        /// </summary>
        [JsonProperty(PropertyName = "mode")]
        public string Mode { get; set; }

        /// <summary>
        /// Gets or sets unique ID of the Node hosting this Instance
        /// </summary>
        [JsonProperty(PropertyName = "nodeId")]
        public System.Guid? NodeId { get; set; }

        /// <summary>
        /// Gets or sets unique ID of the Kubernetes Pod running this Instance
        /// </summary>
        [JsonProperty(PropertyName = "podId")]
        public string PodId { get; set; }

        /// <summary>
        /// Gets or sets current status of this Instance. Possible values
        /// include: 'pending', 'running', 'succeeded', 'failed', 'unknown'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DatamodelId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(DatamodelId.ToString(), "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "DatamodelId", "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$");
                }
            }
            if (BuildId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(BuildId.ToString(), "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "BuildId", "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$");
                }
            }
            if (NodeId != null)
            {
                if (!System.Text.RegularExpressions.Regex.IsMatch(NodeId.ToString(), "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$"))
                {
                    throw new ValidationException(ValidationRules.Pattern, "NodeId", "^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$");
                }
            }
        }
    }
}
