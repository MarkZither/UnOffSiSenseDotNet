// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace UnOffSiSenseDotNet.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Share
    {
        /// <summary>
        /// Initializes a new instance of the Share class.
        /// </summary>
        public Share()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Share class.
        /// </summary>
        public Share(IList<SharesToObject> sharesTo, Subscription subscription, bool? allowChangeSubscription = default(bool?), bool? isPublic = default(bool?), IList<SharesToNewObject> sharesToNew = default(IList<SharesToNewObject>))
        {
            AllowChangeSubscription = allowChangeSubscription;
            IsPublic = isPublic;
            SharesTo = sharesTo;
            SharesToNew = sharesToNew;
            Subscription = subscription;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowChangeSubscription")]
        public bool? AllowChangeSubscription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isPublic")]
        public bool? IsPublic { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sharesTo")]
        public IList<SharesToObject> SharesTo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sharesToNew")]
        public IList<SharesToNewObject> SharesToNew { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "subscription")]
        public Subscription Subscription { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SharesTo == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SharesTo");
            }
            if (Subscription == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Subscription");
            }
        }
    }
}
