swagger: '2.0'
basePath: /api/v2
consumes:
  - application/json
info:
  title: SiSenseSDK
  description: SiSenseSDK wrapper
  version: 2.0.0
produces:
  - application/json
  - application/problem+json
  - text/plain
paths:
  /audit/files:
    x-swagger-router-controller: audit_log.controller.v2
    get:
      tags:
        - audit
      operationId: listAuditLogFiles
      x-permission-type: admins-only
      summary: List available audit log files
      description: This API returns an array of available Audit log files. Each file is validated for integrity - the valid property set to false indicates that the file may have been tempered with or altered.
      parameters:
        - in: header
          description: 'The user''s API token preceded by the keyword `Bearer ` (with space between it and the token). For more information, see [API tutorial](http://developer.sisense.com/display/API2/Using+the+REST+API).'
          name: authorization
          required: false
          type: string
          pattern: ^Bearer .*
        - in: header
          description: The device id.
          name: x-device-id
          required: false
          type: string
      responses:
        '200':
          description: An array of available Audit log files
          schema:
            type: array
            items:
              title: auditFile
              type: object
              properties:
                file:
                  type: string
                  description: audit log filename
                valid:
                  type: boolean
                  description: indicates whether the audit log file is valid
                filePath:
                  type: string
                  description: audit log file path
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              status:
                type: integer
              httpMessage:
                type: string
        '403':
          description: 'Forbidden: Provided authentication is insufficient.'
        '500':
          description: |
            Internal Server Error
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              status:
                type: integer
              httpMessage:
                type: string
  /cluster-nodes:
    get:
      tags:
        - Cluster
      summary: List Cluster Nodes
      description: Get an array of all Nodes in the Cluster.
      operationId: getAllNodesUsingGET
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: An array of Cluster Nodes
          schema:
            type: array
            items:
              $ref: '#/definitions/NodeWithSpec'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/modify
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/cluster-nodes/{nodeId}':
    get:
      tags:
        - Cluster
      summary: Get Cluster Node
      description: Get a specific Node in the Cluster by ID
      operationId: getNodeByIdUsingGET
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: nodeId
          in: path
          description: Node Id
          required: true
          type: string
      responses:
        '200':
          description: The requested Node
          schema:
            $ref: '#/definitions/DeploymentServiceResponseNodeWithSpec'
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/modify
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  /data-groups:
    get:
      tags:
        - Data Groups
      summary: List Data Groups
      description: |-
        Get an array of Data Groups.
         Results can be filtered by using the `name` query parameter for Data Group name, or by using the `datamodel` query parameter for Datamodel ID or Title.
      operationId: getDataGroupsUsingGET
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: datamodel
          in: query
          description: Title of Datamodel to filter results by
          required: false
          type: string
          allowEmptyValue: false
        - name: name
          in: query
          description: Data group name to filter results by
          required: false
          type: string
          allowEmptyValue: false
      responses:
        '200':
          description: An array of Data Groups
          schema:
            type: array
            items:
              $ref: '#/definitions/DataGroupDto'
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/get
      x-permission-type: general
    post:
      tags:
        - Data Groups
      summary: Create Data Group
      description: Create a new Data Group.
      operationId: createDataGroupUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
        - application/json
      parameters:
        - in: body
          name: dataGroupDto
          description: Data Group create params
          required: true
          schema:
            $ref: '#/definitions/DataGroupDto'
      responses:
        '201':
          description: The new Data Group ID
          schema:
            type: string
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/add
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  /data-groups/default:
    get:
      tags:
        - Data Groups
      summary: Get Default Data Group
      description: Get the current default Data Group. This is the Data Group to which Datamodels are assigned by default.
      operationId: getDefaultDataGroupUsingGET
      produces:
        - '*/*'
        - application/json
      responses:
        '200':
          description: The default Data Group
          schema:
            $ref: '#/definitions/DataGroupDto'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occurred.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/get
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/data-groups/{dataGroupId}':
    get:
      tags:
        - Data Groups
      summary: Get Data Group by ID
      description: Get a specific Data Group by ID.
      operationId: getDataGroupByIdUsingGET
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: dataGroupId
          in: path
          description: Data Group Id
          required: true
          type: string
      responses:
        '200':
          description: The requested Data Group
          schema:
            $ref: '#/definitions/DataGroupDto'
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Data Group was not found
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/get
      x-permission-type: general
    delete:
      tags:
        - Data Groups
      summary: Delete Data Group
      description: Delete a Data Group by its ID.
      operationId: deleteDataGroupUsingDELETE
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: dataGroupId
          in: path
          description: Data Group Id
          required: true
          type: string
      responses:
        '204':
          description: Data Group was deleted successfully
          schema:
            type: object
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/remove
      x-permission-type: general
    patch:
      tags:
        - Data Groups
      summary: Update Data Group
      description: Update a Data Group by it ID.
      operationId: updateDataGroupUsingPATCH
      consumes:
        - application/json
      produces:
        - '*/*'
        - application/json
      parameters:
        - in: body
          name: dataGroupDto
          description: Data Group update params
          required: true
          schema:
            $ref: '#/definitions/DataGroupDto'
        - name: dataGroupId
          in: path
          description: Data Group Id
          required: true
          type: string
      responses:
        '200':
          description: Data Group was updated successfully
          schema:
            type: object
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/modify
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/data-groups/{dataGroupId}/datamodels':
    post:
      tags:
        - Data Groups
      summary: Assign Datamodels to Data Group
      description: |-
        Assign one or more Datamodels to a Data Group.
        Datamodels can only be assigned to one Data Group at a time - assigning a Datamodel to a new Data Group will automatically remove it from its current group.
      operationId: assignCubesUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: dataGroupId
          in: path
          description: Data Group Id
          required: true
          type: string
        - in: body
          name: dataSourceIds
          description: Set of ElastiCube Ids
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: ElastiCubes were assigned successfully
          schema:
            type: string
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/data_groups/modify
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  /datamodel-exports/stream/full:
    get:
      tags:
        - Datamodel Imports/Exports
      summary: Export Datamodel as stream
      description: Export a full Datamodel (Schema and Data) as a stream. This endpoint requires a Datamodel ID via the `datamodelId` query parameter - not providing the ID will result in an error.
      operationId: exportDataSourceAsStreamUsingGET
      produces:
        - '*/*'
        - application/json
      parameters:
        - name: datamodelId
          in: query
          description: A Datamodel ID.
          required: false
          type: string
          allowEmptyValue: false
      responses:
        '200':
          description: export stream
          schema:
            $ref: '#/definitions/StreamingResponseBody'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '412':
          description: The ElastiCube is being build.
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/elasticubes/export_with_data
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  /datamodel-imports/stream/full:
    post:
      tags:
        - Datamodel Imports/Exports
      summary: Import full Datamodel as stream
      description: 'Import a full Datamodel (Schema and Data) as a stream This endpoint allows specifying a Datamodel ID via the `datamodelId` query parameter.If provided, that Datamodel''s schema and data will be overriden. In this case, Datamodel title will be ignored.Otherwise, a new Datamodel will be created. The field `newTitle` can be used to explicitly name the new Datamodel.'
      operationId: importCubeStreamUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - name: datamodelId
          in: query
          description: |-
            ID of Datamodel to import into
            if not specified a new datamodel will be created
            If specified, Datamodel title will be ignored.
          required: false
          type: string
        - name: fileToUpload
          in: formData
          description: The file stream to import
          required: true
          type: file
        - name: newTitle
          in: query
          description: |-
            When a datamodelId is not provided to create a new Datamodel, this property can be used to give the new Datamodel a specific title.
            If datamodelId is provided together with newTitle an error will occur.
          required: false
          type: string
      responses:
        '204':
          description: The import request completed successfully
          schema:
            type: object
        '400':
          description: The import request failed
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/elasticubes/import
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
    x-proxy: v2
  '/datamodels/{datamodelId}/instances':
    get:
      tags:
        - Datamodels
      summary: List Datamodel instances
      description: Get an array of physical instances of the Datamodel by ID.
      operationId: getInstancesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: datamodelId
          in: path
          description: datamodelId
          required: true
          type: string
      responses:
        '200':
          description: An array of Datamodel physical instances
          schema:
            type: array
            items:
              $ref: '#/definitions/InstanceInfo'
        '400':
          description: Invalid input provided
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'internal Server Error: An unexpected server error has occured.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/servers/cubes_info
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/builds/{buildId}':
    get:
      tags:
        - Builds
      summary: Get Build Task by ID
      description: |-
        Get a specific Build Process by ID.
        Use this to query a build task's current status.
        Completed tasks are eventually removed and querying them will result in a 404 response.
      operationId: getBuildTask
      produces:
        - application/json
      parameters:
        - name: buildId
          in: path
          description: A Build Task ID.
          required: true
          type: string
      responses:
        '200':
          description: The requested Build task
          schema:
            $ref: '#/definitions/BuildInfoListDTO'
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Provided authentication is insufficient.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occurred.'
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: 'Service Unavailable: The server is unable to handle the request due to temporary maintenance or outage.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/elasticubes/get_tasks
      x-permission-type: general
    delete:
      tags:
        - Builds
      summary: Cancel/Stop a Build Task
      description: |-
        Cancel (stop) a specific Datamodel Build Process by ID.
        Completed, cancelled or failed builds will not be affected by this.
      operationId: cancelBuildUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: buildId
          in: path
          description: A Build Task ID.
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuildServiceResponseVoid'
        '204':
          description: Deleted
          schema:
            type: object
        '401':
          description: 'Unauthorized: Required authentication was not provided.'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden: Provided authentication is insufficient.'
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: 'Not Found: The server has not found anything matching the request URI.'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Internal Server Error: An unexpected server error has occurred.'
          schema:
            $ref: '#/definitions/Error'
        '503':
          description: 'Service Unavailable: The server is unable to handle the request due to temporary maintenance or outage.'
          schema:
            $ref: '#/definitions/Error'
      deprecated: false
      x-permission-path: manage/elasticubes/execute_build
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/datamodels/{datamodelId}/schedule':
    get:
      tags:
        - Scheduled Build
      summary: get schedule build by cube id
      description: '<br>This API is for internal use only, and may be deprecated in future releases.</br><br />get schedule'
      operationId: getSchedule
      produces:
        - application/json
      parameters:
        - name: datamodelId
          in: path
          description: datamodelId
          required: true
          type: string
      responses:
        '200':
          description: search results matching criteria
          schema:
            $ref: '#/definitions/BuildScheduleDTO'
        '400':
          description: bad input parameter
        '404':
          description: data not found
      deprecated: false
      x-permission-path: manage/elasticubes/schedule_build
      x-permission-type: general
    post:
      tags:
        - Scheduled Build
      summary: Add build schedule for cube
      description: '<br>This API is for internal use only, and may be deprecated in future releases.</br><br />Add build schedule'
      operationId: addSchedule
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: buildScheduleDTO
          description: Item to add
          required: false
          schema:
            $ref: '#/definitions/BuildScheduleDTO'
        - name: datamodelId
          in: path
          description: datamodelId
          required: true
          type: string
      responses:
        '200':
          description: OK
        '201':
          description: Build schedule created
        '400':
          description: Invalid input parameter
      deprecated: false
      x-permission-path: manage/elasticubes/schedule_build
      x-permission-type: general
    delete:
      tags:
        - Scheduled Build
      summary: delete schedule
      description: '<br>This API is for internal use only, and may be deprecated in future releases.</br><br />delete schedule'
      operationId: buildCubeIdScheduleDelete
      produces:
        - '*/*'
      parameters:
        - name: datamodelId
          in: path
          description: datamodelId
          required: true
          type: string
      responses:
        '200':
          description: OK
      deprecated: false
      x-permission-path: manage/elasticubes/schedule_build
      x-permission-type: general
    x-permission-type: none
    x-unlimited-content-type: 'true'
  '/connectors/{provider}/table_preview':
    post:
      tags:
        - connectors
      summary: Returns table preview stream
      description: The <strong>get table preview</strong> endpoint returns a preview of the data in specified table.
      operationId: getConnectorTablePreviewUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: authorization
          in: header
          description: 'The user’s API token preceded by the keyword Bearer (with space between it and the token). For more information, see API tutorial.'
          required: false
          type: string
        - in: body
          name: connectionParameters
          description: The connection parameters for a specific datasource
          required: true
          schema:
            $ref: '#/definitions/ConnectionParameters'
        - name: provider
          in: path
          description: The name of live connector provider.
          required: true
          type: string
      responses:
        '200':
          description: Data preview
          schema:
            $ref: '#/definitions/StreamingResponseBody'
      deprecated: false
      x-permission-type: authenticate
    x-permission-type: none
    x-unlimited-content-type: 'true'
  /datamodel-imports/schema:
    post:
      x-permission-type: general
      x-permission-path: manage/elasticubes/import_schema/client
      tags:
        - Datamodel Imports/Exports
      summary: Import a Datamodel Schema
      description: |-
        Import a Datamodel Schema.
        This endpoint allows you to specify a Datamodel ID via the `datamodelId` query parameter. If provided, that Datamodel's schema will be overriden. In this case, the Datamodel title will be ignored.
         Otherwise, a new Datamodel will be created. The field `newTitle` can be used to explicitly name the new Datamodel.
         If both `datamodelId` and `newTitle` are provided, the `newTitle` field will be ignored.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: datamodelId
          in: query
          description: |-
            ID of the Datamodel to import. 
            If not specified, a new datamodel will be created
            If specified, the Datamodel title will be ignored.
          required: false
          type: string
        - name: newTitle
          in: query
          type: string
          required: false
          description: |-
            When a `datamodelId` is not provided to create a new Datamodel, this property can be used to give the new Datamodel a specific title.
            If `datamodelId` is provided together with `newTitle`,  the `newTitle` field will be ignored.
        - name: Body
          in: body
          description: Datamodel schema object
          required: true
          schema:
            $ref: '#/definitions/ElasticubeImportInput'
      responses:
        '200':
          description: import result
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  /datamodels:
    post:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/add
      tags:
        - Datamodels
      summary: Create Datamodel
      description: |-
        Create a new Datamodel.

        Datamodels are created with a blank schema in `draft` state and must be built/published before they can be used in dashboards.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: body
          in: body
          description: New Datamodel Schema object
          required: true
          schema:
            $ref: '#/definitions/DatamodelSchemaInput'
      responses:
        '201':
          description: The new Datamodel
          schema:
            $ref: '#/definitions/DatamodelSchemaOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/clones':
    post:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/add
      tags:
        - Datamodels
      summary: Clone Datamodel
      description: '**BETA**: this API is provided for early access, and may change.<br><br>Duplicate Datamodel by DatamodelId'
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: The title to give the duplicated Datamodel
            required:
              - title
      responses:
        '201':
          description: Duplicate succeeded
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  /datamodel-exports/schema:
    get:
      x-permission-type: general
      x-permission-path: manage/elasticubes/export_schema/client
      summary: Export Datamodel Schema
      description: 'Export a Datamodel Schema. This endpoint requires a Datamodel ID via the datamodelId query parameter - not providing the ID will result in an error. An export type is also required via the type query parameter, defining which version of the Datamodel Schema to export.'
      tags:
        - Datamodel Imports/Exports
      produces: 
        - application/json
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: datamodelId
          in: query
          description: A Datamodel ID.
          required: true
          type: string
        - name: type
          in: query
          type: string
          required: true
          enum:
            - schema-latest
          description: Which Datamodel Schema to export
      responses:
        '200':
          description: export datamodel schema
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}':
    delete:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/remove
      tags:
        - Datamodels
      summary: Delete Datamodel
      description: |-
        Delete a specific Datamodel by its ID

        The Datamodel will be deleted entirely, including its Schema, running instance, and any stored data.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
      responses:
        '200':
          $ref: '#/responses/Standard200HttpResponse'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: Get Datamodel schema by ID
      description: |-
        Get a single Datamodel's schema by ID.

        The response of this endpoint represents the **current** state of the schema as can be seen in the Data page,
        and may differ from the schema available to queries if changes have been made since the last build/publish.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
      responses:
        '200':
          description: The requested Datamodel Schema
          schema:
            $ref: '#/definitions/DatamodelSchemaOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/datasets':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: List Datasets
      description: Get an array of all of a Datamodel's Datasets.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Skip'
      responses:
        '200':
          description: An array of Datasets
          schema:
            type: array
            items:
              $ref: '#/definitions/DatasetOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    post:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Create Dataset
      description: '**BETA**: this API is provided for early access, and may change.<br><br>Create a new Dataset within a Datamodel Schema.'
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - name: body
          in: body
          description: New Dataset object
          required: true
          schema:
            $ref: '#/definitions/DatasetInput'
      responses:
        '201':
          description: The new Dataset
          schema:
            $ref: '#/definitions/DatasetOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/datasets/{datasetId}':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: Get Dataset by ID
      description: Get a specific Dataset from a specific Datamodel Schema by their respective IDs.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
      responses:
        '200':
          description: The requested Dataset
          schema:
            $ref: '#/definitions/DatasetOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    patch:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Update Dataset
      description: |-
        **BETA**: this API is provided for early access, and may change.<br><br>Update a Dataset by ID.

        Only the `connection` property can be updated.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - name: body
          in: body
          description: Dataset object with `connection` to update to
          required: true
          schema:
            $ref: '#/definitions/DatasetUpdate'
      responses:
        '200':
          description: The updated Dataset
          schema:
            $ref: '#/definitions/DatasetOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    delete:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Delete Dataset
      description: '**BETA**: this API is provided for early access, and may change.<br><br>Delete a Dataset from a Datamodel Schema by ID'
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
      responses:
        '200':
          $ref: '#/responses/Standard200HttpResponse'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/datasets/{datasetId}/tables':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: List Tables
      description: |-
        Get an array of Tables from a Dataset.

        Results can be filtered using the optional `name` query parameter.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - name: name
          in: query
          description: Table name to filter by
          required: false
          type: string
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Skip'
      responses:
        '200':
          description: An array of Tables
          schema:
            type: array
            items:
              $ref: '#/definitions/TableOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    post:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Create Table
      description: Create a new Table within a Dataset.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - name: body
          in: body
          description: A new Table object
          required: true
          schema:
            $ref: '#/definitions/TableInput'
      responses:
        '201':
          description: The new Table
          schema:
            $ref: '#/definitions/TableOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/datasets/{datasetId}/tables/{tableId}':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: Get Table by ID
      description: Get a specific Table from the Dataset by ID.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - $ref: '#/parameters/TableId'
      responses:
        '200':
          description: The requested Table
          schema:
            $ref: '#/definitions/TableOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    patch:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Update Table
      description: |-
        Update a Table in the Dataset by ID.

        This operation also updates the Table's Columns - **note** that all desired columns should be provided, including existing ones that should be kept.
        Any existing Columns omitted from the payload will be removed from the Table!
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - $ref: '#/parameters/TableId'
        - name: body
          in: body
          description: A Table object with Columns
          required: true
          schema:
            $ref: '#/definitions/TableOutput'
      responses:
        '200':
          description: The updated Table
          schema:
            $ref: '#/definitions/TableOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    delete:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Delete Table
      description: Delete a Table from the Dataset by ID.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/DatasetId'
        - $ref: '#/parameters/TableId'
      responses:
        '200':
          $ref: '#/responses/Standard200HttpResponse'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/relations':
    x-is-new-architecture: true
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: List Relations
      description: Get an array of Relations within the Datamodel Schema.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Skip'
      responses:
        '200':
          description: An array of Relations
          schema:
            type: array
            items:
              $ref: '#/definitions/RelationOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    post:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Create Relation
      description: Create a new Relation within a Datamodel Schema.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - name: body
          in: body
          description: A new Relation object
          required: true
          schema:
            $ref: '#/definitions/RelationInput'
      responses:
        '201':
          description: The new Relation
          schema:
            $ref: '#/definitions/RelationOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  '/datamodels/{datamodelId}/schema/relations/{relationId}':
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/get
      tags:
        - Datamodels
      summary: Get Relation by ID
      description: Get a specific Relation from the Datamodel Schema by ID.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/RelationId'
      responses:
        '200':
          description: The requested Relation
          schema:
            $ref: '#/definitions/RelationOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    patch:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Update Relation
      description: |-
        Update a specific Relation in the Datamodel Schema by ID.

        **Note** that all desired columns must be included in the `columns` property, including existing ones that should be kept.
        Any existing columns omitted from the payload will be removed from the relation.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/RelationId'
        - name: body
          in: body
          description: An updated Relation object
          required: true
          schema:
            $ref: '#/definitions/RelationInput'
      responses:
        '200':
          description: The updated Relation
          schema:
            $ref: '#/definitions/RelationOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    delete:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: Delete Relation
      description: |-
        Delete a specific Relation from the Datamodel Schema by ID.

        This operation deletes the entire Relation - to remove one or more columns from a relation, use the `PATCH` endpoint.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/DatamodelId'
        - $ref: '#/parameters/RelationId'
      responses:
        '200':
          $ref: '#/responses/Standard200HttpResponse'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  /datamodels/schema:
    get:
      x-is-new-architecture: true
      x-permission-type: general
      x-permission-path: manage/elasticubes/modify
      tags:
        - Datamodels
      summary: List Datamodel schemas
      description: Get an array of all Datamodel schemas.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: title
          in: query
          description: Datamodel Title to search for
          required: false
          type: string
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/Limit'
        - $ref: '#/parameters/Skip'
      responses:
        '200':
          description: An array of Datamodels
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
  /builds:
    get:
      x-permission-type: general
      x-permission-path: manage/elasticubes/get_tasks
      tags:
        - Builds
      summary: List Build tasks
      description: |-
        Get an array of Datamodel Build Processes.

        The results can be filtered using the `datamodelId` and `status` query parameters.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: datamodelId
          in: query
          description: ID of Datamodel to filter results by
          required: false
          type: string
        - name: status
          in: query
          description: Build status to filter results by
          required: false
          type: string
          enum:
            - pending
            - building
            - done
            - failed
            - cancelled
      responses:
        '200':
          description: An array of Build Tasks
          schema:
            type: array
            items:
              $ref: '#/definitions/BuildOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    post:
      x-permission-type: general
      x-permission-path: manage/elasticubes/execute_build
      tags:
        - Builds
      summary: Start a Build
      description: |-
        Create a Build Task to start building a Datamodel.

        The endpoint will return a response as soon as the task is created, **not** when the build is done.

        Use the ID from the response in the `GET` endpoint to query progress.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - name: body
          in: body
          description: Parameters for build task
          required: true
          schema:
            $ref: '#/definitions/BuildInput'
      responses:
        '201':
          description: The new Build task
          schema:
            $ref: '#/definitions/BuildOutput'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
    delete:
      x-permission-type: general
      x-permission-path: manage/elasticubes/execute_build
      tags:
        - Builds
      summary: Cancel/Stop Datamodel builds
      description: |-
        Cancel (stop) all running build tasks for a specific Datamodel.

        This endpoint requires a Datamodel ID to be provided as the query parameter `datamodelId`.

        Executing this endpoint without a valid Datamodel ID will result in an error response - it is not possible to cancel all running builds system-wide.
      parameters:
        - $ref: '#/parameters/Auth'
        - $ref: '#/parameters/x-device-id'
        - $ref: '#/parameters/QueryDatamodelId'
      responses:
        '204':
          $ref: '#/responses/Standard204HttpResponse'
        '401':
          $ref: '#/responses/Standard401HttpResponse'
        '403':
          $ref: '#/responses/Standard403HttpResponse'
        '404':
          $ref: '#/responses/Standard404HttpResponse'
        '500':
          $ref: '#/responses/Standard500HttpResponse'
        '503':
          $ref: '#/responses/Standard503HttpResponse'
definitions:
  auditFile:
    title: auditFile
    type: object
    properties:
      file:
        type: string
        description: audit log filename
      valid:
        type: boolean
        description: indicates whether the audit log file is valid
      filePath:
        type: string
        description: audit log file path
  unauthorizedApiError:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: integer
      httpMessage:
        type: string
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  internalServerApiError:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: integer
      httpMessage:
        type: string
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  error:
    type: object
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: integer
      httpMessage:
        type: string
  baseApiError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  notFoundApiError:
    type: object
    properties:
      error:
        allOf:
          - type: object
            properties:
              code:
                type: integer
              message:
                type: string
              status:
                type: integer
              httpMessage:
                type: string
          - type: object
            properties:
              resourceType:
                type: string
              resourceName:
                type: string
  badRequestApiError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  forbiddenApiError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  unprocessableEntityApiError:
    type: object
    properties:
      error:
        allOf:
          - type: object
            properties:
              code:
                type: integer
              message:
                type: string
              status:
                type: integer
              httpMessage:
                type: string
          - type: object
            properties:
              subErrors:
                type: array
                items:
                  type: object
                  properties:
                    error:
                      type: object
                      properties:
                        code:
                          type: integer
                        message:
                          type: string
                        status:
                          type: integer
                        httpMessage:
                          type: string
  tooManyRequestsApiError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  gatewayTimeouError:
    type: object
    properties:
      error:
        type: object
        properties:
          code:
            type: integer
          message:
            type: string
          status:
            type: integer
          httpMessage:
            type: string
  deploymentId:
    type: object
    required:
      - deploymentId
    properties:
      deploymentId:
        type: string
        description: Current deploymentId
      alias:
        type: string
        description: DeploymentId alias
  updateDeploymentId:
    type: object
    required:
      - alias
    properties:
      alias:
        type: string
        description: Alias for deployment
  AccumulativeConfig:
    type: object
    properties:
      column:
        type: string
      type:
        type: string
    title: AccumulativeConfig
  Arguments:
    type: object
    properties:
      column:
        type: string
      expression:
        $ref: '#/definitions/Expression'
      hidden:
        type: boolean
      id:
        type: string
      indexed:
        type: boolean
      name:
        type: string
      oid:
        type: string
      precision:
        type: integer
        format: int32
      scale:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      type:
        type: integer
        format: int32
    title: Arguments
  AsyncExportRequest:
    type: object
    properties:
      dataSourceId:
        type: string
      local:
        $ref: '#/definitions/LocalExportConfig'
        type: object
        description: 'If this property is present, export will be to a local file'
        properties:
          path:
            type: string
            description: Local file path to store export to
          conflictBehavior:
            type: string
            description: What to do if the file already exists
            enum:
              - replace
              - rename
              - fail
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Export task
      datamodelId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID of Datamodel to export
      type:
        type: string
        description: What should be exported
        enum:
          - schema-latest
          - schema-running
          - full
      status:
        type: string
        description: Status of export process
        enum:
          - exporting
          - done
          - failed
    title: AsyncExportRequest
  AsyncExportResponse:
    type: object
    properties:
      dataSourceId:
        type: string
      id:
        type: string
      local:
        $ref: '#/definitions/LocalExportConfig'
      status:
        type: string
        enum:
          - IDLE
          - RUNNING
          - CANCELLED
          - FAILED
          - FINISHED
          - UNKNOWN
    title: AsyncExportResponse
  AsyncImportRequest:
    type: object
    properties:
      dataSourceId:
        type: string
      dataSourceTitle:
        type: string
      fileName:
        type: string
      local:
        $ref: '#/definitions/LocalImportConfig'
        type: object
        description: 'If this property is present, import will be from local file'
        properties:
          path:
            type: string
            description: Local file path to import from
      s3ImportConfig:
        $ref: '#/definitions/S3ImportConfig'
      streamImportConfig:
        $ref: '#/definitions/StreamImportConfig'
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Import task
      datamodelId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: |-
          Unique ID of Datamodel to import into.
          If provided, Datamodel title is ignored.
          If not provided, a new Datamodel will be created
      newTitle:
        type: string
        description: |-
          When a `datamodelId` is not provided to create a new Datamodel, this property can be used to give the new Datamodel a specific title.

          If `datamodelId` is provided together with `newTitle` an error will occur.
      type:
        type: string
        description: What should be imported
        enum:
          - schema
          - full
      status:
        type: string
        description: Status of import process
        enum:
          - importing
          - done
          - failed
    title: AsyncImportRequest
  AsyncImportResponse:
    type: object
    properties:
      dataSourceId:
        type: string
      errorMessage:
        type: string
      finishTime:
        type: string
        format: date-time
      id:
        type: string
      local:
        $ref: '#/definitions/LocalImportConfig'
      overwrite:
        type: boolean
      startTime:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - IDLE
          - RUNNING
          - CANCELLED
          - FAILED
          - FINISHED
          - UNKNOWN
      userId:
        type: string
    title: AsyncImportResponse
  BuildBehavior:
    type: object
    properties:
      accumulativeConfig:
        $ref: '#/definitions/AccumulativeConfig'
      type:
        type: string
    title: BuildBehavior
  BuildMetaData:
    type: object
    properties:
      tablesRowCount:
        type: object
        additionalProperties:
          type: integer
          format: int64
    title: BuildMetaData
  Column:
    type: object
    properties:
      hidden:
        type: boolean
      id:
        type: string
      indexed:
        type: boolean
      name:
        type: string
      oid:
        type: string
      precision:
        type: integer
        format: int32
      scale:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      type:
        type: integer
        format: int32
    title: Column
  ColumnRefImp:
    type: object
    properties:
      columnName:
        type: string
      tableName:
        type: string
    title: ColumnRefImp
  ColumnsRef:
    type: object
    properties:
      column:
        type: string
      dataset:
        type: string
      table:
        type: string
    title: ColumnsRef
  ConfigOptions:
    type: object
    properties:
      AuthorityCertificate:
        type: string
      ClientCertificate:
        type: string
      PrivateKey:
        type: string
      Protocol:
        type: string
      Table:
        type: string
      culture:
        type: string
      delimiter:
        type: string
      encrypt:
        type: boolean
      endDate:
        type: string
      excludeIfBegins:
        type: string
      excludeIfContains:
        type: string
      fieldsInFirstRow:
        type: boolean
      files:
        type: array
        items:
          type: string
      folder:
        type: string
      hasHeader:
        type: boolean
      ignoreFirstRows:
        type: integer
        format: int32
      ignoreLastRows:
        type: integer
        format: int32
      importQuery:
        type: string
      managedAccounts:
        type: string
      profileIds:
        type: string
      profileNames:
        type: string
      query:
        type: string
      startDate:
        type: string
      staticRange:
        type: string
      stringQuote:
        type: string
      trustServerCertificate:
        type: boolean
      ManagedAccounts:
        type: array
        items:
          type: string
      ProfileIds:
        type: array
        items:
          type: string
      ProfileNames:
        type: array
        items:
          type: string
    title: ConfigOptions
  Connection:
    type: object
    properties:
      parameters:
        $ref: '#/definitions/Parameters'
      provider:
        type: string
      resultLimit:
        type: integer
        format: int64
      schema:
        type: string
      timeout:
        type: integer
        format: int32
    title: Connection
  CronUTC:
    type: object
    properties:
      active:
        type: boolean
        example: true
      cron:
        type: string
        example: '*/15 * * * *'
    title: CronUTC
  CustomCode:
    type: object
    properties:
      additionalParameters:
        type: string
      cellsDisable:
        type: array
        items:
          type: integer
          format: int32
      codePath:
        type: string
      dependsOn:
        type: array
        items:
          $ref: '#/definitions/ColumnsRef'
      language:
        type: string
        enum:
          - PYTHON
          - R
      mode:
        type: string
        enum:
          - FULL
      serverUrl:
        type: string
      timeout:
        type: integer
        format: int32
    title: CustomCode
  DataGroupDto:
    type: object
    properties:
      buildConnectorRunningMode:
        type: string
        example: internal-connectors
        enum:
          - SYSTEM_CONNECTORS
          - INTERNAL_CONNECTORS
      buildNodeResourceAllocation:
        $ref: '#/definitions/ResourceAllocation'
      buildNodes:
        type: array
        items:
          type: string
      connectorsJvmMemoryLimit:
        type: integer
        format: int32
      datamodels:
        type: array
        items:
          $ref: '#/definitions/DataSourceForDataGroup'
      default:
        type: boolean
      indexSize:
        type: string
        example: short
        enum:
          - SHORT
          - LONG
      name:
        type: string
        example: datagroup-1
      oid:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      queryNodeResourceAllocation:
        $ref: '#/definitions/ResourceAllocation'
      queryNodes:
        type: array
        items:
          type: string
      queryQualityOfService:
        $ref: '#/definitions/DataGroupQualityOfService'
      recyclerEnabled:
        type: boolean
      routingPolicy:
        type: string
        example: round-robin
        enum:
          - ROUND_ROBIN
      useLocalStorage:
        type: boolean
      useS3Storage:
        type: boolean
      userLabel:
        type: string
    title: DataGroupDto
  DataGroupQualityOfService:
    type: object
    properties:
      concurrentQueries:
        type: integer
        format: int32
      queryTimeout:
        type: integer
        format: int32
      replicaScaleMax:
        type: integer
        format: int32
      replicaScaleMin:
        type: integer
        format: int32
    title: DataGroupQualityOfService
  DataGroupServiceResponseDataGroupDto:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - DATA_GROUP_NOT_FOUND
          - DATA_GROUP_NAME_EXISTS
          - INVALID_DATA_MODEL_NAME
          - CANNOT_DELETE_DEFAULT
          - CANNOT_DELETE_CUBES_ATTACHED
          - INVALID_NODE_TYPE
          - UNAUTHORIZED
          - INTERNAL
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/DataGroupDto'
    title: DataGroupServiceResponseDataGroupDto
  DataGroupServiceResponseListDataGroupDto:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - DATA_GROUP_NOT_FOUND
          - DATA_GROUP_NAME_EXISTS
          - INVALID_DATA_MODEL_NAME
          - CANNOT_DELETE_DEFAULT
          - CANNOT_DELETE_CUBES_ATTACHED
          - INVALID_NODE_TYPE
          - UNAUTHORIZED
          - INTERNAL
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/DataGroupDto'
    title: DataGroupServiceResponseListDataGroupDto
  DataGroupServiceResponseVoid:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - DATA_GROUP_NOT_FOUND
          - DATA_GROUP_NAME_EXISTS
          - INVALID_DATA_MODEL_NAME
          - CANNOT_DELETE_DEFAULT
          - CANNOT_DELETE_CUBES_ATTACHED
          - INVALID_NODE_TYPE
          - UNAUTHORIZED
          - INTERNAL
      statusCode:
        type: integer
        format: int32
    title: DataGroupServiceResponseVoid
  DataGroupServiceResponsestring:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - DATA_GROUP_NOT_FOUND
          - DATA_GROUP_NAME_EXISTS
          - INVALID_DATA_MODEL_NAME
          - CANNOT_DELETE_DEFAULT
          - CANNOT_DELETE_CUBES_ATTACHED
          - INVALID_NODE_TYPE
          - UNAUTHORIZED
          - INTERNAL
      statusCode:
        type: integer
        format: int32
      value:
        type: string
    title: DataGroupServiceResponsestring
  DataModel:
    type: object
    properties:
      buildInfo:
        $ref: '#/definitions/DataModelBuildInfo'
      created:
        type: string
        format: date-time
      dataGroup:
        type: string
        format: uuid
      name:
        type: string
      schemaLastModified:
        type: string
        format: date-time
      state:
        $ref: '#/definitions/DataModelState'
      storage:
        $ref: '#/definitions/DataModelStorage'
    title: DataModel
  DataModelBuildInfo:
    type: object
    properties:
      buildId:
        type: string
      lastBuildSucceeded:
        type: boolean
      lastBuildTime:
        type: string
        format: date-time
    title: DataModelBuildInfo
  DataModelDTO:
    type: object
    properties:
      oid:
        type: string
      physicalName:
        type: string
      title:
        type: string
    title: DataModelDTO
  DataModelState:
    type: object
    properties:
      isBuilding:
        type: boolean
      isInvalid:
        type: boolean
      isLive:
        type: boolean
      isRunning:
        type: boolean
      isStarting:
        type: boolean
      isStopping:
        type: boolean
    title: DataModelState
  DataModelStorage:
    type: object
    properties:
      dataSize:
        type: integer
        format: int64
      dbfarmDirectory:
        type: string
    title: DataModelStorage
  DataSourceForDataGroup:
    type: object
    properties:
      id:
        type: string
      title:
        type: string
    title: DataSourceForDataGroup
  Dataset:
    type: object
    properties:
      connection:
        $ref: '#/definitions/Connection'
      lastUpdated:
        type: string
      name:
        type: string
      oid:
        type: string
      schema:
        $ref: '#/definitions/Schema'
      type:
        type: string
    title: Dataset
  DeploymentServiceResponseListNodeWithSpec:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - INTERNAL_ERROR
          - NODE_NOT_FOUND
          - NODE_ALREADY_EXISTS
          - UNAUTHORIZED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/NodeWithSpec'
    title: DeploymentServiceResponseListNodeWithSpec
  DeploymentServiceResponseNodeWithSpec:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - INTERNAL_ERROR
          - NODE_NOT_FOUND
          - NODE_ALREADY_EXISTS
          - UNAUTHORIZED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/NodeWithSpec'
    title: DeploymentServiceResponseNodeWithSpec
  DeploymentServiceResponseVoid:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - INTERNAL_ERROR
          - NODE_NOT_FOUND
          - NODE_ALREADY_EXISTS
          - UNAUTHORIZED
      statusCode:
        type: integer
        format: int32
    title: DeploymentServiceResponseVoid
  EcmModel:
    type: object
    properties:
      buildDestination:
        type: string
      datasets:
        type: array
        items:
          $ref: '#/definitions/Dataset'
      lastBuildAttempt:
        type: string
      lastBuildTime:
        type: string
      lastUpdated:
        type: string
      modeling-transformations:
        type: array
        items:
          type: object
      oid:
        type: string
      relations:
        type: array
        items:
          $ref: '#/definitions/Relation'
      schemaId:
        type: string
      server:
        type: string
      title:
        type: string
    title: EcmModel
  Error:
    type: object
    required:
      - status
      - title
    properties:
      detail:
        type: string
        example: Some error has occured with your request and this is a detailed message about it
        description: A detailed error message.
      instance:
        type: string
        example: /api/users/12345
        description: 'When applicable, a relative URI of affected/offensive resource.'
      logref:
        type: string
        description: 'When applicable, a reference to the log entry representing the error''s occurrence.'
      status:
        type: integer
        format: int32
        example: 400
        description: The HTTP code of the response.
      sub:
        type: integer
        format: int32
        example: 40010
        description: 'When applicable, a specific error sub-code.'
      title:
        type: string
        example: Some error
        description: A short name for the error.
      type:
        type: string
        example: 'https://errors.sisense.dev/http/some-error'
        description: 'When applicable, this URI will can be used to identify the specific error and find additional information about it.'
    title: Error
  Expression:
    type: object
    properties:
      expression:
        type: string
      lastUpdated:
        type: string
      oid:
        type: string
    title: Expression
  InputStream:
    type: object
    title: InputStream
  InstanceInfo:
    type: object
    properties:
      buildId:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      buildTime:
        type: string
        format: date-time
        example: '2019-07-15T15:17:03Z'
      creationTime:
        type: string
        example: '2019-07-15T15:17:03Z'
      dataSourceTitle:
        type: string
        example: Demo
      datamodelId:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      memoryMb:
        type: number
        format: double
        example: 150
      mode:
        type: string
        example: build
        enum:
          - BUILD
          - QUERY
      nodeId:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      podId:
        type: string
        example: ec-ec2-1b5ef56e-8add-4eb3-b-78948dcfc9-k7gxh
      sourceId:
        type: string
        example: aDemo
      status:
        type: string
        example: running
        enum:
          - PENDING
          - RUNNING
          - SUCCEEDED
          - FAILED
          - UNKNOWN
    title: InstanceInfo
  LocalExportConfig:
    type: object
    properties:
      conflictBehaviour:
        type: string
        enum:
          - REPLACE
          - RENAME
          - FAIL
      path:
        type: string
    title: LocalExportConfig
  LocalImportConfig:
    type: object
    properties:
      path:
        type: string
    title: LocalImportConfig
  LogicalDataColumn:
    type: object
    properties:
      custom:
        type: boolean
      dataSourceColumnName:
        type: string
      expression:
        type: string
      isHidden:
        type: boolean
      isIndexed:
        type: boolean
      logicalColumnName:
        type: string
      logicalColumnType:
        type: string
        enum:
          - BIGINT
          - DATETIME
          - DECIMAL
          - FLOAT
          - INT
          - REAL
          - TEXT
      oid:
        type: string
    title: LogicalDataColumn
  LogicalDataTable:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/LogicalDataColumn'
      dataSourceTableName:
        type: string
      isHidden:
        type: boolean
      logicalTableName:
        type: string
      oid:
        type: string
      schemaName:
        type: string
    title: LogicalDataTable
  LogicalDbSchema:
    type: object
    properties:
      relationships:
        type: array
        items:
          $ref: '#/definitions/LogicalRelationship'
      schemaId:
        type: string
      schemaName:
        type: string
      tables:
        type: array
        items:
          $ref: '#/definitions/LogicalDataTable'
    title: LogicalDbSchema
  LogicalRelationship:
    type: object
    properties:
      columnRefs:
        type: array
        items:
          $ref: '#/definitions/ColumnRefImp'
      logicalColumnType:
        type: string
        enum:
          - BIGINT
          - DATETIME
          - DECIMAL
          - FLOAT
          - INT
          - REAL
          - TEXT
      relationshipId:
        type: string
    title: LogicalRelationship
  ManagementServiceResponseWithoutValue:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        example: ERROR
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
    title: ManagementServiceResponseWithoutValue
  ManagementServiceResponseAsyncExportResponse:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/AsyncExportResponse'
    title: ManagementServiceResponseAsyncExportResponse
  ManagementServiceResponseAsyncImportResponse:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/AsyncImportResponse'
    title: ManagementServiceResponseAsyncImportResponse
  ManagementServiceResponseBuildMetaData:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/BuildMetaData'
    title: ManagementServiceResponseBuildMetaData
  ManagementServiceResponseDataModel:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/DataModel'
    title: ManagementServiceResponseDataModel
  ManagementServiceResponseListAsyncExportResponse:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/AsyncExportResponse'
    title: ManagementServiceResponseListAsyncExportResponse
  ManagementServiceResponseListAsyncImportResponse:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/AsyncImportResponse'
    title: ManagementServiceResponseListAsyncImportResponse
  ManagementServiceResponseListDataModelDTO:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/DataModelDTO'
    title: ManagementServiceResponseListDataModelDTO
  ManagementServiceResponseListDataModel:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/DataModel'
    title: ManagementServiceResponseListDataModel
  ManagementServiceResponseListInstanceInfo:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        type: array
        items:
          $ref: '#/definitions/InstanceInfo'
    title: ManagementServiceResponseListInstanceInfo
  ManagementServiceResponseLogicalDbSchema:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/LogicalDbSchema'
    title: ManagementServiceResponseLogicalDbSchema
  ManagementServiceResponseVoid:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - CUBE_NOT_FOUND
          - PATH_DOES_NOT_EXIST
          - ALREADY_ATTACHED
          - FAILED_TO_START_CUBE
          - MISSING_DATA_GROUP
          - MISSING_MODEL
          - NOT_VALID
          - NOT_FOUND
          - FAILED_TO_DETACH
          - FAILED_TO_STOP
          - CUBE_STATUS_ERROR
          - CUBE_ALREADY_STOPPED
          - STOP_CUBE_ERROR
          - NO_SUCH_CUBE
          - CUBE_ALREADY_RUNNING
          - TOO_MANY_CUBES_ALREADY_RUNNING
          - CUBE_ALREADY_STARTING
          - START_CUBE_ERROR
          - CUBE_NOT_REGISTERED
          - START_CUBE_INTERRUPTED
          - PROVIDER_ERROR
          - FAILED_TO_MAKE_DIR
          - FAILED_TO_WRITE_FILE
          - FAILED_TO_ATTACH
          - BAD_CUBE_NAME
          - CUBE_IS_BUSY
          - FAILED_TO_MIGRATE
          - FILE_MISSING
          - FILE_TOO_BIG
          - CUBE_ALREADY_EXISTS
          - FAILED_TO_SAVE_DATASOURCE
          - FAILED_TO_RESET_STORAGE
          - FAILED_TO_RESET_BUILD_STORAGE
          - FAILED_TO_RESET_FARM
          - FAILED_TO_RESET_K8S
          - FAILED_LOADING_CUBE
          - INTERNAL_ERROR
          - UNAUTHORIZED
          - UNKNOWN_SERVICE
          - INSUFFICIENT_DISK_RESOURCES
          - TASK_NOT_FOUND
          - TASK_NOT_RUNNING
          - BAD_REQUEST
          - UNSUPPORTED_DATA_SOURCE_TYPE
          - AWS_ERROR
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - SYSTEM_ADD_EC_ACTIVITY_HALTED
      statusCode:
        type: integer
        format: int32
    title: ManagementServiceResponseVoid
  Node:
    type: object
    properties:
      hostName:
        type: string
        description: Node hostname or DNS address.
        example: sisense.example.com
      nodeRoles:
        type: array
        example:
          - infra
        items:
          type: string
          enum:
            - INFRASTRUCTURE
            - APPLICATION
            - BUILD
            - QUERY
        description: An array of roles associated with the Node
      oid:
        type: string
        example: node1
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID allocated to the Node
      name:
        type: string
        example: node1
        description: Name of the node
      active:
        type: boolean
        description: Indicates whether the Node is an active Node within the Cluster
        example: true
      amountOfCpu:
        type: integer
        description: Total number of CPU cores on the Node
        example: 8
      amountOfRamInMb:
        type: integer
        description: Total MBs of RAM on the Node
        example: 16040
      architecture:
        type: string
        description: Node's CPU architecture
        example: amd64
        enum:
          - amd64
      containerRuntimeVersion:
        type: string
        description: Container Runtime version installed on the Node
        example: 'docker://18.6.1'
      hostIp:
        type: string
        description: Node IPv4 Address
        pattern: '^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$'
        example: 10.0.0.1
      kernelVersion:
        type: string
        description: OS kernel version installed on the Node
        example: 4.15.0-50-generic
      kubeProxyVersion:
        type: string
        description: Kubernetes Proxy version installed on the Node
        example: v1.13.4
      kubeletVersion:
        type: string
        description: Kubernetes Kubelet version installed on the Node
        example: v1.13.4
      operatingSystem:
        type: string
        description: OS type installed on the Node
        example: linux
        enum:
          - linux
      osImage:
        type: string
        description: OS version installed on the Node
        example: Ubuntu 18.04.2 LTS
    title: Node
  NodeUpdateParams:
    type: object
    properties:
      nodeRoles:
        type: array
        items:
          type: string
          enum:
            - INFRASTRUCTURE
            - APPLICATION
            - BUILD
            - QUERY
    title: NodeUpdateParams
  NodeWithSpec:
    type: object
    properties:
      active:
        type: boolean
      amountOfCpu:
        type: integer
        format: int32
      amountOfRamInMb:
        type: integer
        format: int32
      architecture:
        type: string
      containerRuntimeVersion:
        type: string
      hostName:
        type: string
      kernelVersion:
        type: string
      kubeProxyVersion:
        type: string
      kubeletVersion:
        type: string
      nodeRoles:
        type: array
        example:
          - infra
        items:
          type: string
          enum:
            - INFRASTRUCTURE
            - APPLICATION
            - BUILD
            - QUERY
      oid:
        type: string
        example: node1
      operatingSystem:
        type: string
      osImage:
        type: string
    title: NodeWithSpec
  Parameter:
    type: object
    properties:
      key:
        type: string
        example: key1
      value:
        type: string
        example: value1
    title: Parameter
  Parameters:
    type: object
    title: Parameters
  Relation:
    type: object
    properties:
      columns:
        type: array
        items:
          $ref: '#/definitions/ColumnsRef'
      oid:
        type: string
    title: Relation
  ResourceAllocation:
    type: object
    properties:
      coresUsagePercentage:
        type: integer
        format: int32
      limitCpuCores:
        type: number
        format: float
      limitRamSizeInMB:
        type: integer
        format: int32
      requiredCpuCores:
        type: number
        format: float
      requiredRamSizeInMB:
        type: integer
        format: int32
    title: ResourceAllocation
  RestCommand:
    type: object
    properties:
      body:
        type: string
      headers:
        type: array
        items:
          $ref: '#/definitions/Parameter'
      method:
        type: string
        enum:
          - POST
          - GET
          - PUT
          - DELETE
          - PATCH
      url:
        type: string
        example: 'https://api.example.com/resources/'
    title: RestCommand
    description: REST command to run when task execute
  S3ImportConfig:
    type: object
    properties:
      accessKey:
        type: string
      bucketName:
        type: string
      objectName:
        type: string
      region:
        type: string
      secretKey:
        type: string
    title: S3ImportConfig
  SchedulerTask:
    type: object
    required:
      - action
    properties:
      action:
        $ref: '#/definitions/TaskAction'
      active:
        type: boolean
      explicitTime:
        type: string
        example: '2018-24-24T11:30:00Z'
      externalId:
        type: string
      id:
        type: string
      schedules:
        type: array
        items:
          $ref: '#/definitions/CronUTC'
    title: SchedulerTask
  SchedulerTaskEvent:
    type: object
    required:
      - eventId
      - taskId
    properties:
      additionalInfo:
        type: array
        items:
          type: string
      completedMessage:
        type: string
      endTime:
        type: string
        example: '2018-06-24T11:30:00Z'
      eventId:
        type: string
      executionTime:
        type: string
        example: '2018-06-24T11:30:00Z'
      taskId:
        type: string
    title: SchedulerTaskEvent
  Schema:
    type: object
    properties:
      id:
        type: string
      tables:
        type: array
        items:
          $ref: '#/definitions/Table'
    title: Schema
  StreamImportConfig:
    type: object
    properties:
      inputStream:
        $ref: '#/definitions/InputStream'
    title: StreamImportConfig
  StreamingResponseBody:
    type: object
    title: StreamingResponseBody
  Table:
    type: object
    properties:
      buildBehavior:
        $ref: '#/definitions/BuildBehavior'
      columns:
        type: array
        items:
          $ref: '#/definitions/Column'
      configOptions:
        $ref: '#/definitions/ConfigOptions'
      customCode:
        $ref: '#/definitions/CustomCode'
      expression:
        $ref: '#/definitions/Expression'
      hidden:
        type: boolean
      id:
        type: string
      lastUpdated:
        type: string
      name:
        type: string
      oid:
        type: string
      schemaName:
        type: string
      tuple-transformations:
        type: array
        items:
          $ref: '#/definitions/TupleTransformation'
      type:
        type: string
      vTag:
        type: string
    title: Table
  TaskAction:
    type: object
    properties:
      actionType:
        type: string
        enum:
          - RestCommand
          - RabbitRPC
      content:
        $ref: '#/definitions/RestCommand'
    title: TaskAction
  TupleTransformation:
    type: object
    properties:
      arguments:
        $ref: '#/definitions/Arguments'
      lastUpdated:
        type: string
      type:
        type: string
    title: TupleTransformation
  Version:
    type: object
    properties:
      buildTime:
        type: string
      commitId:
        type: string
      deployedTime:
        type: string
      productBuild:
        type: string
      serviceBuild:
        type: string
      version:
        type: string
    title: Version
  string:
    type: object
    title: string
  BuildInfoDTO:
    type: object
    properties:
      buildType:
        type: string
      completed:
        type: string
        format: date-time
      created:
        type: string
        format: date-time
      datamodelId:
        type: string
      datamodelTitle:
        type: string
      datamodelType:
        type: string
      indexSize:
        type: string
      instanceId:
        type: string
      oid:
        type: string
      rowLimit:
        type: integer
        format: int64
      schemaLastUpdate:
        type: string
      source:
        type: string
      started:
        type: string
        format: date-time
      status:
        type: string
    title: BuildInfoDTO
  BuildInfoListDTO:
    type: object
    properties:
      builds:
        type: array
        items:
          $ref: '#/definitions/BuildInfoDTO'
    title: BuildInfoListDTO
  BuildScheduleDTO:
    type: object
    required:
      - buildType
      - scheduleType
    properties:
      buildType:
        type: string
        enum:
          - ACCUMULATE
          - FULL
          - SCHEMA_CHANGES
      daysOfWeek:
        type: array
        items:
          type: string
          enum:
            - SUN
            - MON
            - TUE
            - WED
            - THU
            - FRI
            - SAT
      hour:
        type: integer
        format: int32
      intervalSeconds:
        type: integer
        format: int64
      minute:
        type: integer
        format: int32
      scheduleType:
        type: string
        enum:
          - Interval
          - DaysOfWeek
    title: BuildScheduleDTO
    description: All Times in UTC
  BuildServiceResponseBuildInfoDTO:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - BUILD_GENERAL_ERROR
          - FAILED_TO_INITIATE_BUILD
          - FAILED_TO_GET_BUILD_PROCESS
          - FAILED_TO_GET_DATASOURCE_ID
          - FAILED_TO_GET_DATASOURCE_INFO
          - FAILED_TO_GET_ECM_MODEL
          - FAILED_TO_STORE_ECM_MODEL_FILE
          - FAILED_TO_STORE_TO_DISK
          - FAILED_TO_STORE_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_LOGICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_ADDITIONAL_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_CUBE_INFO_FILE
          - FAILED_TO_STORE_BUILD_METADATA_FILE
          - FAILED_TO_CREATE_CUBE_FOR_BUILD
          - FAILED_TO_GET_TRANSLATION_RESPONSE
          - FAILED_TO_TRANSLATE_QUERY
          - BUILD_ALREADY_RUNNING
          - BUILD_WAS_NOT_MARKED_TO_RUN
          - DATA_SOURCE_NOT_FOUND
          - UNAUTHORIZED_OPERATION
          - FAILED_TO_COMPLETE_SANITY_CHECK
          - EXCEPTION_IN_SANITY_CHECK
          - CUBE_IS_BUSY
          - INSUFFICIENT_DISK_RESOURCES
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - MISSING_DATA_GROUP
          - FAILED_TO_CANCEL_WHILE_FINALIZING
          - FAILED_TO_GET_CUSTOM_ELEMENTS_SQL_EXPRESSIONS
          - FAILED_TO_GET_DEPENDENCIES
          - FAILED_TO_CREATE_MODELS
          - FAILED_TO_CREATE_VIEWS
          - FAILED_TO_CREATE_BUCKET
          - FAILED_TO_LOAD_FILE_TO_BUCKET
          - FAILED_TO_IMPORT_LIVE_CUBE_MODEL
          - FAILED_TO_SET_CUBE_MODELS
          - FAILED_TO_GET_CREDENTIALS_FILE
          - FAILED_TO_READ_CREDENTIALS_FILE
          - FAILED_TO_EXCUTE_GCP_JOB
          - FAILED_TO_LOAD_TABLE_TO_BIG_QUERY
          - FAILED_TO_CREATE_ETLT_MODEL
          - FAILED_TO_GET_SCHEDULE_BUILD
          - FAILED_SCHEDULE_BUILD
          - ERROR_WHILE_SCHEDULE_BUILD
          - FAILED_TO_DELETE_SCHEDULE_BUILD
          - FAILED_TO_RUN_PRE_BUILD_PLUGIN
          - BUILD_CANCELLED_BY_PLUGIN
          - ECM_MODEL_CHANGE_BY_PLUGIN_NOT_SUPPORTED
          - FAILED_TO_START_CUBE
          - FAILED_TO_DELETE_ALL_BUILD_STORAGE_ITEMS
          - FAILED_TO_COMPLETE_BUILD
          - FAILED_TO_DELETE_LIVE_CUBE
          - FAILED_TO_DELETE_LIVE_CUBE_NOT_FOUND
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/BuildInfoDTO'
    title: BuildServiceResponseBuildInfoDTO
  BuildServiceResponseBuildInfoListDTO:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - BUILD_GENERAL_ERROR
          - FAILED_TO_INITIATE_BUILD
          - FAILED_TO_GET_BUILD_PROCESS
          - FAILED_TO_GET_DATASOURCE_ID
          - FAILED_TO_GET_DATASOURCE_INFO
          - FAILED_TO_GET_ECM_MODEL
          - FAILED_TO_STORE_ECM_MODEL_FILE
          - FAILED_TO_STORE_TO_DISK
          - FAILED_TO_STORE_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_LOGICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_ADDITIONAL_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_CUBE_INFO_FILE
          - FAILED_TO_STORE_BUILD_METADATA_FILE
          - FAILED_TO_CREATE_CUBE_FOR_BUILD
          - FAILED_TO_GET_TRANSLATION_RESPONSE
          - FAILED_TO_TRANSLATE_QUERY
          - BUILD_ALREADY_RUNNING
          - BUILD_WAS_NOT_MARKED_TO_RUN
          - DATA_SOURCE_NOT_FOUND
          - UNAUTHORIZED_OPERATION
          - FAILED_TO_COMPLETE_SANITY_CHECK
          - EXCEPTION_IN_SANITY_CHECK
          - CUBE_IS_BUSY
          - INSUFFICIENT_DISK_RESOURCES
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - MISSING_DATA_GROUP
          - FAILED_TO_CANCEL_WHILE_FINALIZING
          - FAILED_TO_GET_CUSTOM_ELEMENTS_SQL_EXPRESSIONS
          - FAILED_TO_GET_DEPENDENCIES
          - FAILED_TO_CREATE_MODELS
          - FAILED_TO_CREATE_VIEWS
          - FAILED_TO_CREATE_BUCKET
          - FAILED_TO_LOAD_FILE_TO_BUCKET
          - FAILED_TO_IMPORT_LIVE_CUBE_MODEL
          - FAILED_TO_SET_CUBE_MODELS
          - FAILED_TO_GET_CREDENTIALS_FILE
          - FAILED_TO_READ_CREDENTIALS_FILE
          - FAILED_TO_EXCUTE_GCP_JOB
          - FAILED_TO_LOAD_TABLE_TO_BIG_QUERY
          - FAILED_TO_CREATE_ETLT_MODEL
          - FAILED_TO_GET_SCHEDULE_BUILD
          - FAILED_SCHEDULE_BUILD
          - ERROR_WHILE_SCHEDULE_BUILD
          - FAILED_TO_DELETE_SCHEDULE_BUILD
          - FAILED_TO_RUN_PRE_BUILD_PLUGIN
          - BUILD_CANCELLED_BY_PLUGIN
          - ECM_MODEL_CHANGE_BY_PLUGIN_NOT_SUPPORTED
          - FAILED_TO_START_CUBE
          - FAILED_TO_DELETE_ALL_BUILD_STORAGE_ITEMS
          - FAILED_TO_COMPLETE_BUILD
          - FAILED_TO_DELETE_LIVE_CUBE
          - FAILED_TO_DELETE_LIVE_CUBE_NOT_FOUND
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/BuildInfoListDTO'
    title: BuildServiceResponseBuildInfoListDTO
  BuildServiceResponseVoid:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - BUILD_GENERAL_ERROR
          - FAILED_TO_INITIATE_BUILD
          - FAILED_TO_GET_BUILD_PROCESS
          - FAILED_TO_GET_DATASOURCE_ID
          - FAILED_TO_GET_DATASOURCE_INFO
          - FAILED_TO_GET_ECM_MODEL
          - FAILED_TO_STORE_ECM_MODEL_FILE
          - FAILED_TO_STORE_TO_DISK
          - FAILED_TO_STORE_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_LOGICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_ADDITIONAL_PHYSICAL_DB_SCHEMA_FILE
          - FAILED_TO_STORE_CUBE_INFO_FILE
          - FAILED_TO_STORE_BUILD_METADATA_FILE
          - FAILED_TO_CREATE_CUBE_FOR_BUILD
          - FAILED_TO_GET_TRANSLATION_RESPONSE
          - FAILED_TO_TRANSLATE_QUERY
          - BUILD_ALREADY_RUNNING
          - BUILD_WAS_NOT_MARKED_TO_RUN
          - DATA_SOURCE_NOT_FOUND
          - UNAUTHORIZED_OPERATION
          - FAILED_TO_COMPLETE_SANITY_CHECK
          - EXCEPTION_IN_SANITY_CHECK
          - CUBE_IS_BUSY
          - INSUFFICIENT_DISK_RESOURCES
          - SYSTEM_IN_RESTORE
          - SYSTEM_IN_BACKUP
          - MISSING_DATA_GROUP
          - FAILED_TO_CANCEL_WHILE_FINALIZING
          - FAILED_TO_GET_CUSTOM_ELEMENTS_SQL_EXPRESSIONS
          - FAILED_TO_GET_DEPENDENCIES
          - FAILED_TO_CREATE_MODELS
          - FAILED_TO_CREATE_VIEWS
          - FAILED_TO_CREATE_BUCKET
          - FAILED_TO_LOAD_FILE_TO_BUCKET
          - FAILED_TO_IMPORT_LIVE_CUBE_MODEL
          - FAILED_TO_SET_CUBE_MODELS
          - FAILED_TO_GET_CREDENTIALS_FILE
          - FAILED_TO_READ_CREDENTIALS_FILE
          - FAILED_TO_EXCUTE_GCP_JOB
          - FAILED_TO_LOAD_TABLE_TO_BIG_QUERY
          - FAILED_TO_CREATE_ETLT_MODEL
          - FAILED_TO_GET_SCHEDULE_BUILD
          - FAILED_SCHEDULE_BUILD
          - ERROR_WHILE_SCHEDULE_BUILD
          - FAILED_TO_DELETE_SCHEDULE_BUILD
          - FAILED_TO_RUN_PRE_BUILD_PLUGIN
          - BUILD_CANCELLED_BY_PLUGIN
          - ECM_MODEL_CHANGE_BY_PLUGIN_NOT_SUPPORTED
          - FAILED_TO_START_CUBE
          - FAILED_TO_DELETE_ALL_BUILD_STORAGE_ITEMS
          - FAILED_TO_COMPLETE_BUILD
          - FAILED_TO_DELETE_LIVE_CUBE
          - FAILED_TO_DELETE_LIVE_CUBE_NOT_FOUND
      statusCode:
        type: integer
        format: int32
    title: BuildServiceResponseVoid
  StackTraceElement:
    type: object
    properties:
      classLoaderName:
        type: string
      className:
        type: string
      fileName:
        type: string
      lineNumber:
        type: integer
        format: int32
      methodName:
        type: string
      moduleName:
        type: string
      moduleVersion:
        type: string
      nativeMethod:
        type: boolean
    title: StackTraceElement
  Throwable:
    type: object
    properties:
      cause:
        $ref: '#/definitions/Throwable'
      localizedMessage:
        type: string
      message:
        type: string
      stackTrace:
        type: array
        items:
          $ref: '#/definitions/StackTraceElement'
      suppressed:
        type: array
        items:
          $ref: '#/definitions/Throwable'
    title: Throwable
  WorkplanEdge:
    type: object
    required:
      - edgeId
      - sourceNodeId
      - targetNodeId
    properties:
      edgeId:
        type: string
        example: edge-id-a
        description: Edge ID
      sourceNodeId:
        type: string
        example: node-id-1
        description: Node ID of the source task node (the required node that target node depends on)
      targetNodeId:
        type: string
        example: node-id-2
        description: Node ID of the target task node (later node that should run after source node fulfilled)
    title: WorkplanEdge
  WorkplanGraph:
    type: object
    required:
      - edges
      - nodes
    properties:
      nodes:
        type: array
        description: Workplan graph's nodes list
        items:
          $ref: '#/definitions/WorkplanNodeStatus'
      edges:
        type: array
        description: Workplan graph's edges list
        items:
          $ref: '#/definitions/WorkplanEdge'
    title: WorkplanGraph
  WorkplanGraphMessage:
    type: object
    required:
      - graph
      - timestamp
      - type
      - workplanId
      - workplanStatus
    properties:
      workplanId:
        type: string
        example: workplan-id-abcde
        description: Workplan's unique ID
      timestamp:
        type: string
        example: '2018-07-08T16:29:36.036Z'
        description: Message timestamp
      type:
        type: string
        description: Message type
        enum:
          - WORKPLAN_EXPLAIN_GRAPH
          - WORKPLAN_EXPLAIN_UPDATE
      workplanStatus:
        description: Workplan status
        $ref: '#/definitions/WorkplanStatus'
      graph:
        description: 'Workplan graph, represents the tasks'' nodes and the edges (dependencies) between them'
        $ref: '#/definitions/WorkplanGraph'
    title: WorkplanGraphMessage
  WorkplanNodeStatus:
    type: object
    required:
      - endTime
      - errorMessage
      - nodeId
      - nodeState
      - startTime
    properties:
      nodeId:
        type: string
        example: node-id-1
        description: Task node ID
      nodeState:
        type: string
        example: FAILED
        description: Task node's status
        enum:
          - INIT
          - READY
          - RUNNING
          - COMPLETED
          - FAILED
          - CANCELLED
      startTime:
        type: string
        example: '2018-07-08T16:29:30.044Z'
        description: Task start time (set only if task already started)
      endTime:
        type: string
        example: '2018-07-08T17:09:30.044Z'
        description: Task end time (set only if task already ended)
      errorMessage:
        type: string
        example: Failed to connect to database
        description: Error message (set only in case of failure)
      nodeCustomAttributes:
        type: object
        example:
          buildTaskType: CUSTOM_COLUMN
          tableName: Patients
          logicalColumnName: Full name
        description: Custom attributes per workplan type. Notice the attributes can be different according to the specific workplan
        additionalProperties:
          type: string
    title: WorkplanNodeStatus
  WorkplanNodeUpdateMessage:
    type: object
    required:
      - elementType
      - nodeStatus
      - timestamp
      - type
      - updateType
      - workplanId
    properties:
      workplanId:
        type: string
        example: workplan-id-abcde
        description: Workplan's unique ID
      timestamp:
        type: string
        example: '2018-07-08T16:29:36.036Z'
        description: Message timestamp
      type:
        type: string
        description: Message type
        enum:
          - WORKPLAN_EXPLAIN_GRAPH
          - WORKPLAN_EXPLAIN_UPDATE
      elementType:
        type: string
        enum:
          - WORKPLAN
          - NODE
      updateType:
        type: string
        enum:
          - READY
          - PENDING
          - START
          - PROGRESS
          - END
      nodeStatus:
        description: Workplan node's status
        $ref: '#/definitions/WorkplanNodeStatus'
    title: WorkplanNodeUpdateMessage
  WorkplanState:
    type: object
    properties:
      cancelMessage:
        type: string
      cancelled:
        type: boolean
      completed:
        type: boolean
      exception:
        $ref: '#/definitions/Throwable'
      failed:
        type: boolean
      finalizing:
        type: boolean
      state:
        type: string
        enum:
          - INIT
          - RUNNING
          - FINALIZING
          - COMPLETED
          - FAILED
          - CANCELED
    title: WorkplanState
  WorkplanStatus:
    type: object
    required:
      - endTime
      - errorMessage
      - startTime
      - workplanState
    properties:
      workplanState:
        example: FAILED
        description: Workplan status
        $ref: '#/definitions/WorkplanState'
      startTime:
        type: string
        example: '2018-07-08T16:29:30.044Z'
        description: Workplan start time (set only if workplan already started)
      endTime:
        type: string
        example: '2018-07-08T17:09:30.044Z'
        description: Workplan end time (set only if workplan already ended)
      errorMessage:
        type: string
        example: Failed to connect to datasource
        description: Error message (set only in case of failure)
      workplanCustomAttributes:
        type: object
        example:
          ecmModelId: ecm-model-id-11111
          etltModelId: etlt-model-id-22222
          buildType: full
        description: Custom attributes per workplan type. Notice the attributes can be different according to the specific workplan
        additionalProperties:
          type: string
    title: WorkplanStatus
  WorkplanUpdateMessage:
    type: object
    required:
      - elementType
      - timestamp
      - type
      - updateType
      - workplanId
      - workplanStatus
    properties:
      workplanId:
        type: string
        example: workplan-id-abcde
        description: Workplan's unique ID
      timestamp:
        type: string
        example: '2018-07-08T16:29:36.036Z'
        description: Message timestamp
      type:
        type: string
        description: Message type
        enum:
          - WORKPLAN_EXPLAIN_GRAPH
          - WORKPLAN_EXPLAIN_UPDATE
      elementType:
        type: string
        enum:
          - WORKPLAN
          - NODE
      updateType:
        type: string
        enum:
          - READY
          - PENDING
          - START
          - PROGRESS
          - END
      workplanStatus:
        description: Workplan status
        $ref: '#/definitions/WorkplanStatus'
    title: WorkplanUpdateMessage
  ColumnMetaData:
    type: object
    properties:
      dataType:
        type: integer
        format: int32
      name:
        type: string
    title: ColumnMetaData
  ConnectionParameters:
    type: object
    required:
      - connection
    properties:
      connection:
        type: object
        description: Key value pairs of connection properties for specific connector. Values must be strings or array of strings.
      schema:
        type: string
        description: Database schema
      table:
        type: string
        description: Table name
      limit:
        type: integer
        format: int32
        example: 0
      fetchRelations:
        type: boolean
        description: Used in schema details api. Tells api to return table relations next to columns
      sql:
        type: string
    title: ConnectionParameters
  QueryServiceResponseStatementMetaData:
    type: object
    properties:
      error:
        type: string
      status:
        type: string
        enum:
          - OK
          - TRANSLATION_ERROR
          - RUN_QUERY_ERROR
          - FORMAT_RESULT_ERROR
          - CUBE_NOT_EXISTS
          - CUBE_INSTANCE_MISSING
          - MONET_PROVIDER_ERROR
          - THROTTLING_QUEUE_FULL
          - NO_SUCH_FORMATTER
          - NQUERY_COMPILATION_ERROR
          - M2M_CANCEL_EXCEPTION
          - CANCEL_QUERY
          - UNAUTHORIZED
          - QUERY_TIMEOUT
          - R_SERVER_ERROR
          - OUT_OF_MEMORY_EXCEPTION
      statusCode:
        type: integer
        format: int32
      value:
        $ref: '#/definitions/StatementMetaData'
    title: QueryServiceResponseStatementMetaData
  SqlMetaData:
    type: object
    properties:
      headers:
        type: array
        items:
          type: string
      metadata:
        type: array
        items:
          $ref: '#/definitions/ColumnMetaData'
    title: SqlMetaData
  StatementMetaData:
    type: object
    properties:
      hostName:
        type: string
      physicalSql:
        type: string
      port:
        type: integer
        format: int32
      sqlMetaData:
        $ref: '#/definitions/SqlMetaData'
    title: StatementMetaData
  Datamodel:
    type: object
    properties:
      title:
        type: string
        description: Datamodel title
      description:
        type: string
        description: Optional Datamodel description text
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Datamodel
      type:
        type: string
        description: Datamodel type; `extract` type Datamodels are formerly known as Elasticube
        enum:
          - extract
          - live
      created:
        type: string
        format: date-time
        description: Datetime of Datamodel creation
      schemaLastModified:
        type: string
        format: date-time
        description: Datetime of last change to Datamodel Schema
      lastBuildTime:
        type: string
        format: date-time
        description: |-
          Datetime of the last build attempt of the Datamodel
          Applies only to `extract` type Datamodels
      lastSuccessfulBuildTime:
        type: string
        format: date-time
        description: |-
          Datetime of last successful build of Datamodel
          Applies only to `extract` type Datamodels
      schema:
        type: object
        description: |-
          Will only be returned if `schema=true` query parameter is present.

          For detailed object model information, please see the `GET /schema` endpoint.
      state:
        type: object
        description: Current state of the Datamodel
        properties:
          status:
            type: string
            description: Datamodel's current status
            enum:
              - draft
              - building
              - running
              - stopping
              - stopped
              - invalid
          uptime:
            type: string
            description: |-
              Time since Datamodel was made queriable
              Using 'd.hh:mm:ss' format
            pattern: '^\d+\.\d{2}:\d{2}:\d{2}'
          isRestarting:
            type: boolean
            description: True when Datamodel is being restarted
          isBuilding:
            type: boolean
            description: True when Datamodel is building (applies only to Extract type)
          isRunning:
            type: boolean
            description: True when the Datamodel can be queried
          isStopping:
            type: boolean
            description: True when the Datamodel is being stopped
          isInvalid:
            type: boolean
            description: True when a build resulted in a corrupt/invalid Datamodel
          canStart:
            type: boolean
            description: True when the Datamodel is stopped and can be started
      buildInfo:
        type: object
        description: 'Information about the Datamodel last build, applies only to `extract` type Datamodels'
        properties:
          lastFullBuildTime:
            type: string
            format: date-time
            description: Datetime of most recent full build
          lastDeltaBuildTime:
            type: string
            format: date-time
            description: Datetime of most recent accumulative/partial build
          lastScheduledBuildTime:
            type: string
            format: date-time
            description: Datetime of most recent scheduled build
          lastFullBuildDuration:
            type: string
            description: 'Duration of most recent full build, in seconds'
          lastDeltaBuildDuration:
            type: string
            description: 'Duration of most recent accumulative/partial build, in seconds'
          lastScheduledBuildDuration:
            type: string
            description: 'Duration of most recent scheduled build, in seconds'
          nextScheduledBuildTime:
            type: string
            format: date-time
            description: Datetime of next scheduled build
          buildId:
            type: string
            format: uuid
            pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
            description: Unique ID of the most recent Build Process
          lastBuildSucceeded:
            type: boolean
            description: True if the most recent build completed successfully
      storage:
        type: object
        description: Information about stored Datamodel data - applies only to `extract` type Datamodels
        properties:
          dataSize:
            type: integer
            description: 'Datamodel Data directory size, in MBs'
          dBFarmDirectory:
            type: string
            description: Filesystem path to Datamodel Data directory
  ElasticubeImportInput:
    type: object
    properties:
      title:
        type: string
        description: Datamodel title (name)
        example: My Datamodel
      type:
        description: Datamodel type
        $ref: '#/definitions/ElasticubeType'
      relationType:
        description: |-
          Default relation type for the Datamodel.

          - `extract` type Datamodels have `regular` relations by default.

          - `live` type Datamodels have `direct` relations by default.
        $ref: '#/definitions/RelationType'
      relations:
        type: array
        description: Relations defined in the Datamodel Schema
        items:
          $ref: '#/definitions/RelationImportModelInput'
      datasets:
        type: array
        description: Datasets defined in the Datamodel Schema
        items:
          $ref: '#/definitions/DatasetImportModelInput'
  ElasticubeType:
    type: string
    description: Datamodel type; `extract` type Datamodels are formerly known as Elasticube
    default: extract
    enum:
      - live
      - extract
  RelationType:
    type: string
    description: |-
      Default relation type for the Datamodel.

      - `extract` type Datamodels have `regular` relations by default.

      - `live` type Datamodels have `direct` relations by default.
    enum:
      - direct
      - regular
  DatamodelSchemaInput:
    type: object
    properties:
      title:
        type: string
        description: Datamodel title (name)
        example: My Datamodel
      server:
        type: string
        description: |-
          *Legacy*: Hostname of server on which the Datamodel is created.
          **Only applies to Windows versions.**
          Defaults to `LocalHost`.
        example: LocalHost
        default: LocalHost
      type:
        type: string
        description: Datamodel type; `extract` type Datamodels are formerly known as Elasticube
        default: extract
        enum:
          - live
          - extract
    required:
      - title
  DatamodelSchemaOutput:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Datamodel
      title:
        type: string
        description: Datamodel title (name)
      server:
        type: string
        description: |-
          *Legacy*: Hostname of server on which the Datamodel is created.
          **Only applies to Windows versions.**
          Defaults to `LocalHost`.
        example: LocalHost
        default: LocalHost
      serverId:
        type: string
        description: |-
          *Legacy*: Unique ID of server on which the Datamodel is created.
          **Only applies to Windows versions.**
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      shares:
        type: array
        description: Array of Users/Groups with access to the Datamodel
        items:
          $ref: '#/definitions/Party'
      lastUpdated:
        type: string
        format: date-time
        description: Datetime of most recent schema update
      lastBuildTime:
        type: string
        format: date-time
        description: Datetime of most recent schema build attempt (for `extract` type Datamodels)
      lastSuccessfulBuildTime:
        type: string
        format: date-time
        description: Datetime of most recent schema build success (for `extract` type Datamodels)
      lastPublishTime:
        type: string
        format: date-time
        description: Datetime of most recent schema publish (for `live` type Datamodels)
      type:
        type: string
        description: Datamodel type; `extract` type Datamodels are formerly known as Elasticube
        enum:
          - extract
          - custom
      creator:
        description: User that created the Datamodel Schema
        $ref: '#/definitions/Party'
      datasets:
        type: array
        description: Datasets defined in the Datamodel Schema
        items:
          $ref: '#/definitions/DatasetOutput'
      relations:
        type: array
        description: Relations defined in the Datamodel Schema
        items:
          $ref: '#/definitions/RelationOutput'
      relationType:
        type: string
        description: |-
          Default relation type for the Datamodel.

          - `extract` type Datamodels have `regular` relations by default.

          - `live` type Datamodels have `direct` relations by default.
        enum:
          - direct
          - regular
  DatasetInput:
    type: object
    properties:
      name:
        type: string
        description: Dataset name
        example: my-dataset-1
      type:
        type: string
        description: |-
          Dataset type:

          - `live`: live connection dataset

          - `extract`: formerly known as 'Elasticube'

          - `custom` for custom SQL expression-based tables
        default: extract
        enum:
          - live
          - extract
          - custom
      connection:
        description: |-
          Connection properties to data source - not applicable in `custom` type Datasets.

          As the properties for connections depend on the connector used, the specification here is only partial.

          Please refer to the online API refence for further information about available connectors.
        $ref: '#/definitions/ConnectionInput'
    required:
      - name
      - type
  DatasetImportModelInput:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Dataset
      name:
        type: string
        description: Dataset name
        example: my-dataset-1
      type:
        type: string
        description: |-
          Dataset type:

          - `live`: live connection dataset

          - `extract`: formerly known as 'Elasticube'

          - `custom` for custom SQL expression-based tables
        default: extract
        enum:
          - live
          - extract
          - custom
      connection:
        description: |-
          Connection properties to data source - not applicable in `custom` type Datasets.

          As the properties for connections depend on the connector used, the specification here is only partial.

          Please refer to the online API refence for further information about available connectors.
        $ref: '#/definitions/ConnectionImportModelInput'
    required:
      - name
      - type
  DatasetUpdate:
    type: object
    properties:
      name:
        type: string
        description: Dataset name
        example: my-dataset-1
      type:
        type: string
        description: |-
          Dataset type:

          - `live`: live connection dataset

          - `extract`: formerly known as 'Elasticube'

          - `custom` for custom SQL expression-based tables
        default: extract
        enum:
          - live
          - extract
          - custom
      connection:
        description: |-
          Connection properties to data source - not applicable in `custom` type Datasets.

          As the properties for connections depend on the connector used, the specification here is only partial.

          Please refer to the online API refence for further information about available connectors.
        $ref: '#/definitions/ConnectionInput'
  DatasetOutput:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Dataset
      name:
        type: string
        description: Dataset name
        example: my-dataset-1
      type:
        type: string
        description: |-
          Dataset type:

          - `live`: live connection dataset

          - `extract`: formerly known as 'Elasticube'

          - `custom` for custom SQL expression-based tables
        default: extract
        enum:
          - live
          - extract
          - custom
      connection:
        description: |-
          Connection properties to data source - not applicable in `custom` type Datasets.

          As the properties for connections depend on the connector used, the specification here is only partial.

          Please refer to the online API refence for further information about available connectors.
        $ref: '#/definitions/ConnectionInput'
  ConnectionInput:
    type: object
    properties:
      provider:
        type: string
        description: |-
          Connector type identifier
          See [Available connectors](http://about:blank)
        example: csv
      parameters:
        type: object
        description: |-
          Connector-specific parameters
          See [Available connectors](http://about:blank)
      schema:
        type: string
        description: |-
          Name of the database schema to connect to

          With RDBMS this is usually the database name such as `Northwind`, with files (csv/excel) it is the file name
      fileName:
        type: string
        description: Filename for file-based connectors
      timeout:
        type: integer
        description: |-
          Query timeout in Milliseconds
          **applicable only to Live connections**
      refreshRate:
        type: integer
        description: |-
          Query refresh rate in Milliseconds
          **applicable only to Live connections**
      resultLimit:
        type: integer
        description: |-
          Maximum number of rows to retrieve in each query
          **applicable only to Live connections**
      uiParams:
        type: object
        description: ''
      globalTableConfigOptions:
        type: object
        description: |-
          Connector-specific configuration applicable to all Tables in this Dataset
          See [Available connectors](http://about:blank)
    required:
      - provider
      - parameters
  ConnectionImportModelInput:
    type: object
    properties:
      id:
        type: string
        description: Connection Id
        example: 5d6bac7210d5b135681341e7
      provider:
        type: string
        description: |-
          Connector type identifier
          See [Available connectors](http://about:blank)
        example: csv
      parameters:
        type: object
        description: |-
          Connector-specific parameters
          See [Available connectors](http://about:blank)
      schema:
        type: string
        description: |-
          Name of the database schema to connect to

          With RDBMS this is usually the database name such as `Northwind`, with files (csv/excel) it is the file name
      fileName:
        type: string
        description: Filename for file-based connectors
      timeout:
        type: integer
        description: |-
          Query timeout in Milliseconds
          **applicable only to Live connections**
      refreshRate:
        type: integer
        description: |-
          Query refresh rate in Milliseconds
          **applicable only to Live connections**
      resultLimit:
        type: integer
        description: |-
          Maximum number of rows to retrieve in each query
          **applicable only to Live connections**
      uiParams:
        type: object
        description: ''
      globalTableConfigOptions:
        type: object
        description: |-
          Connector-specific configuration applicable to all Tables in this Dataset
          See [Available connectors](http://about:blank)
    required:
      - provider
      - parameters
  RelationInput:
    type: object
    properties:
      columns:
        type: array
        description: An array of columns by which their respective tables are connected
        items:
          $ref: '#/definitions/RelationFieldInput'
    required:
      - columns
  RelationImportModelInput:
    type: object
    properties:
      columns:
        type: array
        description: An array of columns by which their respective tables are connected
        items:
          $ref: '#/definitions/RelationFieldInput'
    required:
      - columns
  RelationOutput:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Relation object
      columns:
        type: array
        description: An array of columns by which their respective tables are connected
        items:
          $ref: '#/definitions/RelationFieldInput'
    required:
      - columns
  RelationFieldInput:
    type: object
    properties:
      dataset:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: ID of Dataset containing connected table
      table:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: ID of connected Table
      column:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: ID of column by which the table is connected
    required:
      - dataset
      - table
      - column
  TableInput:
    type: object
    properties:
      id:
        type: string
        description: Original Table name/identifier from the datasource
      name:
        type: string
        description: Table name - this name will identify the table in queries
      columns:
        type: array
        description: Table columns
        items:
          $ref: '#/definitions/ColumnInput'
      hidden:
        description: Hide the table - if `true` the table will be visible only in Datamodel schema editor and cannot be queried
        type: boolean
        default: false
      buildBehavior:
        description: |-
          Configuration for how the Table should be built
          Only applies to `extract` type Datasets
        $ref: '#/definitions/TableBuildBehaviorInput'
      configOptions:
        description: Table configuration
        $ref: '#/definitions/TableConfigOptionsInput'
      description:
        type: string
        description: Textual description for the Table
        example: This is a sales table
      tags:
        type: array
        description: An array of labels for the Table
        example:
          - sales
          - fact
        items:
          type: string
      expression:
        type: string
        description: '**Only applicable to `custom` type tables:** SQL expression'
      type:
        type: string
        description: 'Table type: `base` for regular tables, `custom` for SQL expression-based tables'
        default: base
        enum:
          - base
          - custom
    required:
      - id
      - columns
  TableOutput:
    type: object
    properties:
      id:
        type: string
        description: Original Table name/identifier from the datasource
      name:
        type: string
        description: Table name - this name will identify the table in queries
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Table
      columns:
        type: array
        description: Table columns
        items:
          $ref: '#/definitions/ColumnOutput'
      hidden:
        type: boolean
        description: Hide the table - if `true` the table will be visible only in Datamodel schema editor and cannot be queried
        default: false
      buildBehavior:
        $ref: '#/definitions/TableBuildBehaviorInput'
        description: |-
          Configuration for how the Table should be built
          Only applies to `extract` type Datasets
      configOptions:
        $ref: '#/definitions/TableConfigOptionsInput'
        description: Table configuration
      description:
        type: string
        description: Textual description for the Table
        example: This is a sales table
      tags:
        type: array
        description: An array of labels for the Table
        example:
          - sales
          - fact
        items:
          type: string
      expression:
        type: object
        description: '**Only applicable to `custom` type tables**'
        properties:
          oid:
            type: string
            format: uuid
            pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
            description: |-
              Unique ID assigned to the expression
              Only used to track changes, any update of the expression will generate a new `oid` for it
          expression:
            type: string
            description: Actual SQL expression
          lastUpdated:
            type: string
            format: date-time
            description: Datetime of most recent SQL expression change
      type:
        type: string
        description: 'Table type: `base` for regular tables, `custom` for SQL expression-based tables'
        enum:
          - base
          - custom
      lastUpdated:
        type: string
        format: date-time
        description: Datetime of most recent change to Table schema
      createdAt:
        type: string
        format: date-time
        description: Datetime of Table schema creation
  TableBuildBehaviorInput:
    type: object
    properties:
      type:
        type: string
        description: ''
        enum:
          - sync
          - accumulativeSync
          - ignoreIfExists
      accumulativeConfig:
        type: object
        description: ''
        properties:
          column:
            type: string
            description: ''
          type:
            type: string
            description: ''
            enum:
              - lastStored
              - lastDays
          lastDays:
            type: integer
            description: ''
          keepOnlyDays:
            type: integer
            description: ''
        required:
          - type
          - column
    required:
      - type
  TableConfigOptionsInput:
    type: object
    description: |-
      Connector-specific configuration applicable to this Table
      See [Available connectors](http://about:blank)
  ColumnInput:
    type: object
    properties:
      id:
        type: string
        description: Original Column name/ID in the data source
        example: column_name
      name:
        type: string
        description: Column name - this name will be used by queries
        example: Column Alias
      type:
        type: integer
        description: |-
          Column datatype, according to the following list:

          - BigInt : 0,

          - Binary : 1,

          - Bit : 2,

          - Char : 3,

          - DateTime : 4,

          - Decimal : 5,

          - Float : 6,

          - Image : 7,

          - Int : 8,

          - Money : 9,

          - NChar : 10,

          - NText : 11,

          - NVarChar : 12,

          - Real : 13,

          - UniqueIdentifier : 14,

          - SmallDateTime : 15,

          - SmallInt : 16,

          - SmallMoney : 17,

          - Text : 18,

          - Timestamp : 19,

          - TinyInt : 20,

          - VarBinary : 21,

          - VarChar : 22,

          - Variant : 23,

          - Xml : 25,

          - Udt : 29,

          - Structured : 30,

          - Date : 31,

          - Time : 32,

          - DateTime2 : 33,

          - DateTimeOffset : 34
      size:
        type: integer
        description: Field size - applicalbe for field types such as `nvarchar` with predetermined field sizes
      precision:
        type: integer
        description: 'Decimal point percision - applicable for `decimal`, `float` etc. field types'
      scale:
        type: integer
        description: ''
      hidden:
        type: boolean
        description: Hide the column - if `true` the column will be visible only in Datamodel schema editor and cannot be queried
        default: false
      indexed:
        type: boolean
        default: false
        description: |-
          Indexed columns are stored as codes, linked to a decode table.
          Usually used for text fields with repeating values
      description:
        type: string
        description: Column description
      import:
        type: boolean
        default: true
        description: |-
          When set to `false` the column will be skipped when building.
          Only applies to `extract` type tables
      isCustom:
        type: boolean
        default: false
        description: '`true` for SQL expression-based custom Columns'
      expression:
        type: string
        description: '**Only applicable to `custom` type columns:** SQL expression'
    required:
      - id
  ColumnOutput:
    type: object
    properties:
      id:
        type: string
        description: Original Column name/ID in the data source
        example: column_name
      name:
        type: string
        description: Column name - this name will be used by queries
        example: Column Alias
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Column
      type:
        type: integer
        description: |-
          Column datatype, according to the following list:

          - BigInt : 0,

          - Binary : 1,

          - Bit : 2,

          - Char : 3,

          - DateTime : 4,

          - Decimal : 5,

          - Float : 6,

          - Image : 7,

          - Int : 8,

          - Money : 9,

          - NChar : 10,

          - NText : 11,

          - NVarChar : 12,

          - Real : 13,

          - UniqueIdentifier : 14,

          - SmallDateTime : 15,

          - SmallInt : 16,

          - SmallMoney : 17,

          - Text : 18,

          - Timestamp : 19,

          - TinyInt : 20,

          - VarBinary : 21,

          - VarChar : 22,

          - Variant : 23,

          - Xml : 25,

          - Udt : 29,

          - Structured : 30,

          - Date : 31,

          - Time : 32,

          - DateTime2 : 33,

          - DateTimeOffset : 34
      size:
        type: integer
        description: Field size - applicalbe for field types such as `nvarchar` with predetermined field sizes
      precision:
        type: integer
        description: 'Decimal point percision - applicable for `decimal`, `float` etc. field types'
      scale:
        type: integer
        description: ''
      hidden:
        type: boolean
        description: Hide the column - if `true` the column will be visible only in Datamodel schema editor and cannot be queried
        default: false
      indexed:
        type: boolean
        default: false
        description: |-
          Indexed columns are stored as codes, linked to a decode table.
          Usually used for text fields with repeating values
      description:
        type: string
        description: Column description
      import:
        type: boolean
        default: true
        description: |-
          When set to `false` the column will be skipped when building.
          Only applies to `extract` type tables
      isCustom:
        type: boolean
        default: false
        description: '`true` for SQL expression-based custom Columns'
      expression:
        type: object
        description: '**Only applicable to `custom` type columns**'
        properties:
          oid:
            type: string
            format: uuid
            pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
            description: |-
              Unique ID assigned to the expression
              Only used to track changes, any update of the expression will generate a new `oid` for it
          expression:
            type: string
            description: Actual SQL expression
          lastUpdated:
            type: string
            format: date-time
            description: Datetime of most recent SQL expression change
  BuildInput:
    type: object
    properties:
      datamodelId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Datamodel unique ID
      buildType:
        type: string
        description: Type of build performed
        enum:
          - schema_changes
          - by_table
          - full
          - publish
      rowLimit:
        type: integer
        format: int64
        description: 'For `extract` type Datamodels, the maximum number of rows to import per table, if set.'
    required:
      - datamodelId
      - buildType
  BuildOutput:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Build Task
      datamodelId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Datamodel unique ID
      buildType:
        type: string
        description: Type of build performed
        enum:
          - schema-changes
          - by-table
          - full
          - publish
      status:
        type: string
        description: Current status of the task
        enum:
          - pending
          - building
          - done
          - cancelled
          - failed
      datamodelTitle:
        type: string
        description: Title (name) of the Datamodel being built
      datamodelType:
        type: string
        description: Datamodel type
        enum:
          - extract
          - live
      indexSize:
        type: string
        description: Built Datamodel index size type (only applicable to `extract` type Datamodels)
        enum:
          - short
          - long
      instanceId:
        type: string
        description: Unique ID of physical instance performing the build task
      schemaLastUpdate:
        type: string
        format: date-time
        description: Datetime of last schema update being built
      created:
        type: string
        format: date-time
        description: Datetime of the task being created
      started:
        type: string
        format: date-time
        description: Datetime of the task being started
      completed:
        type: string
        format: date-time
        description: Datetime of the task completing/stopping/failing
      rowLimit:
        type: integer
        format: int64
        description: 'For `extract` type Datamodels, the maximum number of rows to import per table, if set.'
      source:
        type: string
        description: What triggered the build task
        enum:
          - rest
          - nextecm
          - scheduler
          - cli
  BuildScheduleInput:
    type: object
    properties:
      buildType:
        type: string
        description: |-
          What type of build to execute
          `live` Datamodels can only use `publish`
        enum:
          - schema-changes
          - by-table
          - full
          - publish
      daysOfWeek:
        type: array
        description: 'For `dow` type schedule, which days of the week build should be run'
        items:
          type: string
          enum:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
      hour:
        type: integer
        description: 'For `dow` type schedule, which hour of the day build should be run'
        format: int32
      intervalSeconds:
        type: integer
        description: 'For `interval` type schedule, interval in seconds that build should be run on'
        format: int64
      minute:
        type: integer
        description: 'For `dow` type schedule, which minute of the hour build should be run'
        format: int32
      cron:
        type: string
        description: 'For `cron` type schedule, the `CRON` expression'
        format: cron
      scheduleType:
        type: string
        enum:
          - interval
          - dow
          - cron
  BuildScheduleOutput:
    type: object
    properties:
      oid:
        type: string
        description: Unique ID of build schedule
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      buildType:
        type: string
        description: |-
          What type of build to execute
          `live` Datamodels can only use `publish`
        enum:
          - schema-changes
          - by-table
          - full
          - publish
      daysOfWeek:
        type: array
        description: 'For `dow` type schedule, which days of the week build should be run'
        items:
          type: string
          enum:
            - sun
            - mon
            - tue
            - wed
            - thu
            - fri
            - sat
      hour:
        type: integer
        description: 'For `dow` type schedule, which hour of the day build should be run'
        format: int32
      intervalSeconds:
        type: integer
        description: 'For `interval` type schedule, interval in seconds that build should be run on'
        format: int64
      minute:
        type: integer
        description: 'For `dow` type schedule, which minute of the hour build should be run'
        format: int32
      cron:
        type: string
        description: 'For `cron` type schedule, the `CRON` expression'
        format: cron
      scheduleType:
        type: string
        enum:
          - interval
          - dow
          - cron
  DatamodelInstance:
    type: object
    properties:
      datamodelId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the Datamodel
      datamodelTitle:
        type: string
        description: Datamodel title
        example: Sample ECommerce
      buildId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID of the most recent Build Process that created/updated this instance
      buildTime:
        type: string
        format: date-time
        description: Datetime of the most recent Build Process that created/updated this instance
        example: '2019-07-15T15:17:03Z'
      creationTime:
        type: string
        format: date-time
        description: Datetime of Instance creation
        example: '2019-07-15T15:17:03Z'
      memoryMb:
        type: integer
        format: double
        description: MBs of RAM currently consumed by the Instance
        example: 150
      mode:
        type: string
        description: Which mode the Instance is operating in currently
        enum:
          - build
          - query
      nodeId:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID of the Node hosting this Instance
      podId:
        type: string
        description: Unique ID of the Kubernetes Pod running this Instance
        example: ec-ec2-1b5ef56e-8add-4eb3-b-78948dcfc9-k7gxh
      status:
        type: string
        description: Current status of this Instance
        enum:
          - pending
          - running
          - succeeded
          - failed
          - unknown
  DataGroupInput:
    type: object
    required:
      - name
    properties:
      name:
        type: string
        description: Data Group name
        example: datagroup-1
      default:
        type: boolean
        default: false
        description: |-
          `true` for the default Data Group.
          Only one default Data Group can exist at any given time
      routingPolicy:
        type: string
        description: Method by which queries are distributed within the Data Group
        default: round-robin
        enum:
          - round-robin
      buildConnectorRunningMode:
        type: string
        description: Connectors mode
        default: system-connectors
        enum:
          - system-connectors
          - internal-connectors
      indexSize:
        type: string
        description: Short/Long Index mode
        default: short
        enum:
          - short
          - long
      recyclerEnabled:
        type: boolean
        default: true
        description: Is 'Sisense Recycler' caching enabled
      buildNodeResourceAllocation:
        description: Resource allocation rules for Build Nodes in the Data Group
        $ref: '#/definitions/NodeResourceAllocation'
      queryNodeResourceAllocation:
        description: Resource allocation rules for Query Nodes in the Data Group
        $ref: '#/definitions/NodeResourceAllocation'
      queryQualityOfService:
        type: object
        description: QoS configuration for Query Nodes in the Data Group
        properties:
          queryTimeout:
            type: integer
            description: Query timeout in Seconds
            minimum: 1
            default: 300
          concurrentQueries:
            type: integer
            description: Maximum concurrent queries per Datamodel in the Data Group
            default: 8
            minimum: 1
          replicaScaleMax:
            type: integer
            description: Maximum physical instances per Datamodel in the Data Group
            default: 1
            minimum: 1
          replicaScaleMin:
            type: integer
            description: Minimum physical instances per Datamodel in the Data Group
            default: 1
            minimum: 1
      queryNodes:
        type: array
        description: Array of Node IDs associated with the Data Group as Query Nodes
        items:
          type: string
          format: uuid
          pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      buildNodes:
        type: array
        description: Array of Node IDs associated with the Data Group as Build Nodes
        items:
          type: string
          format: uuid
          pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  DataGroupOutput:
    type: object
    properties:
      oid:
        type: string
        description: Unique ID allocated to the Data Group
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      name:
        type: string
        description: Data Group name
        example: datagroup-1
      default:
        type: boolean
        description: |-
          `true` for the default Data Group.
          Only one default Data Group can exist at any given time
      routingPolicy:
        type: string
        description: Method by which queries are distributed within the Data Group
        enum:
          - round-robin
      buildConnectorRunningMode:
        type: string
        description: Connectors mode
        enum:
          - system-connectors
          - internal-connectors
      indexSize:
        type: string
        description: Short/Long Index mode
        enum:
          - short
          - long
      recyclerEnabled:
        type: boolean
        description: Is 'Sisense Recycler' caching enabled
      datamodels:
        type: array
        description: Array of Datamodel IDs associated with the Data Group
        items:
          type: string
          format: uuid
          pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      buildNodeResourceAllocation:
        description: Resource allocation rules for Build Nodes in the Data Group
        $ref: '#/definitions/NodeResourceAllocation'
      queryNodeResourceAllocation:
        description: Resource allocation rules for Query Nodes in the Data Group
        $ref: '#/definitions/NodeResourceAllocation'
      queryQualityOfService:
        type: object
        description: QoS configuration for Query Nodes in the Data Group
        properties:
          queryTimeout:
            type: integer
            description: Query timeout in Seconds
          concurrentQueries:
            type: integer
            description: Maximum concurrent queries per Datamodel in the Data Group
            format: int32
          replicaScaleMax:
            type: integer
            description: Maximum physical instances per Datamodel in the Data Group
            format: int32
          replicaScaleMin:
            type: integer
            description: Minimum physical instances per Datamodel in the Data Group
            format: int32
      queryNodes:
        type: array
        description: Array of Node IDs associated with the Data Group as Query Nodes
        items:
          type: string
          format: uuid
          pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
      buildNodes:
        type: array
        description: Array of Node IDs associated with the Data Group as Build Nodes
        items:
          type: string
          format: uuid
          pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  NodeResourceAllocation:
    type: object
    properties:
      coresUsagePercentage:
        type: integer
        description: Limit threads per Datamodel as percentage of CPU capacity
        minimum: 0
        maximum: 100
        default: 50
      limitCpuCores:
        type: integer
        description: |-
          Limit CPU core utilization per Datamodel
          `-1` for system default
        default: -1
      limitRamSizeInMB:
        type: integer
        description: |-
          Limit MBs of RAM utilization per Datamodel
          `-1` for system default
        default: -1
      requiredCpuCores:
        type: integer
        description: |-
          Minimum available PU cores required per Datamodel
          `-1` for system default
        default: -1
      requiredRamSizeInMB:
        type: integer
        description: |-
          Minimum available MBs of RAM required per Datamodel
          `-1` for system default
        default: -1
  Party:
    type: object
    properties:
      oid:
        type: string
        format: uuid
        pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
        description: Unique ID assigned to the User/Group
      type:
        type: string
        description: Party type - user group or individual user
        enum:
          - user
          - group
parameters:
  authorization:
    in: header
    description: 'The user''s API token preceded by the keyword `Bearer ` (with space between it and the token). For more information, see [API tutorial](http://developer.sisense.com/display/API2/Using+the+REST+API).'
    name: authorization
    required: false
    type: string
    pattern: ^Bearer .*
  x-device-id:
    in: header
    description: The device id.
    name: x-device-id
    required: false
    type: string
  fields:
    name: fields
    in: query
    description: Whitelist of fields to return for each document. fields Can also define which fields to exclude by prefixing field names with `-`
    required: false
    type: string
  sort:
    name: sort
    in: query
    description: 'Field by which the results should be sorted. Ascending by default, descending if prefixed by `-`'
    required: false
    type: string
  skip:
    name: skip
    in: query
    description: Number of results to skip from the start of the data set. skip is to be used with the `limit` parameter for paging
    required: false
    type: integer
    minimum: 0
  limit:
    name: limit
    in: query
    description: How many results should be returned. limit is to be used with the `skip` parameter for paging
    required: false
    type: integer
    minimum: 1
  expand:
    name: expand
    in: query
    description: List of fields that should be expanded (substitures their IDs with actual objects). May be nested using the `resource.subResource` format
    required: false
    type: string
  Auth:
    in: header
    description: The user's API token preceded by the keyword `Bearer ` (with a single space between it and the token).
    name: authorization
    required: false
    type: string
    pattern: ^Bearer .*
  Fields:
    name: fields
    in: query
    description: A whitelist of fields to return for each object in the response.
    required: false
    type: string
  Sort:
    name: sort
    in: query
    description: |-
      A field by which the results should be sorted.

      Results will be sorted in ascending order by default, or descending if the field name is prefixed by `-`.
    required: false
    type: string
  Skip:
    name: skip
    in: query
    description: |-
      Number of results to skip from the start of the data set.

      This parameter must be used with the `limit` parameter, and is intended for paging.
    required: false
    type: integer
    minimum: 0
  Limit:
    name: limit
    in: query
    description: |-
      Number of results to be returned from the data set.

      This field must be used with the `skip` parameter, and is intended for paging.
    required: false
    type: integer
    minimum: 1
  Expand:
    name: expand
    in: query
    description: |-
      A List of fields that should be expanded in the response. Separated by commas `,`.

      Expanded fields will substitute their ID value with actual objects.

      May be nested using the `resource.subResource` format.
    required: false
    type: string
  DatamodelId:
    name: datamodelId
    in: path
    description: A Datamodel ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  DatasetId:
    name: datasetId
    in: path
    description: A Dataset ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  TableId:
    name: tableId
    in: path
    description: A Table ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  RelationId:
    name: relationId
    in: path
    description: A Datamodel Relation ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  BuildId:
    name: buildId
    in: path
    description: A Build Task ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  AsyncExportId:
    name: asyncExportId
    in: path
    description: An async Datamodel Export Task ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  AsyncImportId:
    name: asyncImportId
    in: path
    description: An async Datamodel Import Task ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  ScheduleId:
    name: scheduleId
    in: path
    description: A Datamodel Build Schedule ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  DataGroupId:
    name: dataGroupId
    in: path
    description: A Data Group ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  NodeId:
    name: nodeId
    in: path
    description: A Cluster Node ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  QueryDatamodelId:
    name: datamodelId
    in: query
    description: A Datamodel ID.
    required: true
    type: string
    format: uuid
    pattern: '^[0-9a-f]{8}(-?[0-9a-f]{4}){3}-?[0-9a-f]{4,12}$'
  SchemaType:
    name: schemaType
    in: query
    description: Desired Datamodel schema instance. Defaults to none (do not include schema in response).
    enum:
      - none
      - latest
      - running
    required: false
    type: string
schemes:
  - http
  - https
responses:
  Standard200HttpResponse:
    description: Success.
    schema:
      $ref: '#/definitions/Error'
  Standard201HttpResponse:
    description: Created.
    schema:
      $ref: '#/definitions/Error'
  Standard204HttpResponse:
    description: Deleted.
    schema:
      $ref: '#/definitions/Error'
  Standard400HttpResponse:
    description: 'Invalid Request: Request parameters and/or body are invalid.'
    schema:
      $ref: '#/definitions/Error'
  Standard401HttpResponse:
    description: 'Unauthorized: Required authentication was not provided.'
    schema:
      $ref: '#/definitions/Error'
  Standard403HttpResponse:
    description: 'Forbidden: Provided authentication is insufficient.'
    schema:
      $ref: '#/definitions/Error'
  Standard404HttpResponse:
    description: 'Not Found: The server has not found anything matching the request URI.'
    schema:
      $ref: '#/definitions/Error'
  Standard500HttpResponse:
    description: 'Internal Server Error: An unexpected server error has occurred.'
    schema:
      $ref: '#/definitions/Error'
  Standard503HttpResponse:
    description: 'Service Unavailable: The server is unable to handle the request due to temporary maintenance or outage.'
    schema:
      $ref: '#/definitions/Error'
